// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class PlanDefinition : DomainResource {
    public PlanDefinitionAction[]? Action { get; set; }
    public string? ApprovalDate { get; set; }
    public ContactDetail[]? Author { get; set; }
    public ContactDetail[]? Contact { get; set; }
    public string? Copyright { get; set; }
    public string? Date { get; set; }
    public string? Description { get; set; }
    public ContactDetail[]? Editor { get; set; }
    public Period? EffectivePeriod { get; set; }
    public ContactDetail[]? Endorser { get; set; }
    public bool? Experimental { get; set; }
    public PlanDefinitionGoal[]? Goal { get; set; }
    public Identifier[]? Identifier { get; set; }
    public CodeableConcept[]? Jurisdiction { get; set; }
    public string? LastReviewDate { get; set; }
    public string[]? Library { get; set; }
    public string? Name { get; set; }
    public string? Publisher { get; set; }
    public string? Purpose { get; set; }
    public RelatedArtifact[]? RelatedArtifact { get; set; }
    public ContactDetail[]? Reviewer { get; set; }
    public required PublicationStatusEnum Status { get; set; }
    public CodeableConcept? SubjectCodeableConcept { get; set; }
    public ResourceReference? SubjectReference { get; set; }
    public string? Subtitle { get; set; }
    public string? Title { get; set; }
    public CodeableConcept[]? Topic { get; set; }
    public CodeableConcept? Type { get; set; }
    public string? Url { get; set; }
    public string? Usage { get; set; }
    public UsageContext[]? UseContext { get; set; }
    public string? Version { get; set; }

    public class PlanDefinitionAction : BackboneElement {
        public PlanDefinitionAction[]? Action { get; set; }
        public ActionCardinalityBehaviorEnum? CardinalityBehavior { get; set; }
        public CodeableConcept[]? Code { get; set; }
        public PlanDefinitionActionCondition[]? Condition { get; set; }
        public string? DefinitionCanonical { get; set; }
        public string? DefinitionUri { get; set; }
        public string? Description { get; set; }
        public RelatedArtifact[]? Documentation { get; set; }
        public PlanDefinitionActionDynamicValue[]? DynamicValue { get; set; }
        public string[]? GoalId { get; set; }
        public ActionGroupingBehaviorEnum? GroupingBehavior { get; set; }
        public DataRequirement[]? Input { get; set; }
        public DataRequirement[]? Output { get; set; }
        public PlanDefinitionActionParticipant[]? Participant { get; set; }
        public ActionPrecheckBehaviorEnum? PrecheckBehavior { get; set; }
        public string? Prefix { get; set; }
        public RequestPriorityEnum? Priority { get; set; }
        public CodeableConcept[]? Reason { get; set; }
        public PlanDefinitionActionRelatedAction[]? RelatedAction { get; set; }
        public ActionRequiredBehaviorEnum? RequiredBehavior { get; set; }
        public ActionSelectionBehaviorEnum? SelectionBehavior { get; set; }
        public CodeableConcept? SubjectCodeableConcept { get; set; }
        public ResourceReference? SubjectReference { get; set; }
        public string? TextEquivalent { get; set; }
        public Age? TimingAge { get; set; }
        public string? TimingDateTime { get; set; }
        public Duration? TimingDuration { get; set; }
        public Period? TimingPeriod { get; set; }
        public Range? TimingRange { get; set; }
        public Timing? TimingTiming { get; set; }
        public string? Title { get; set; }
        public string? Transform { get; set; }
        public TriggerDefinition[]? Trigger { get; set; }
        public CodeableConcept? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionActionCondition : BackboneElement {
        public ResourceExpression? Expression { get; set; }
        public required ActionConditionKindEnum Kind { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionActionDynamicValue : BackboneElement {
        public ResourceExpression? Expression { get; set; }
        public string? Path { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionActionParticipant : BackboneElement {
        public CodeableConcept? Role { get; set; }
        public required ActionParticipantTypeEnum Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionActionRelatedAction : BackboneElement {
        public required string ActionId { get; set; }
        public Duration? OffsetDuration { get; set; }
        public Range? OffsetRange { get; set; }
        public required ActionRelationshipTypeEnum Relationship { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionGoal : BackboneElement {
        public CodeableConcept[]? Addresses { get; set; }
        public CodeableConcept? Category { get; set; }
        public required CodeableConcept Description { get; set; }
        public RelatedArtifact[]? Documentation { get; set; }
        public CodeableConcept? Priority { get; set; }
        public CodeableConcept? Start { get; set; }
        public PlanDefinitionGoalTarget[]? Target { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class PlanDefinitionGoalTarget : BackboneElement {
        public CodeableConcept? DetailCodeableConcept { get; set; }
        public Quantity? DetailQuantity { get; set; }
        public Range? DetailRange { get; set; }
        public Duration? Due { get; set; }
        public CodeableConcept? Measure { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

}

