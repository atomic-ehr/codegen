// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class Encounter : DomainResource {
    public ResourceReference[]? Account { get; set; }
    public ResourceReference[]? Appointment { get; set; }
    public ResourceReference[]? BasedOn { get; set; }
    public required Coding Class { get; set; }
    public EncounterClassHistory[]? ClassHistory { get; set; }
    public EncounterDiagnosis[]? Diagnosis { get; set; }
    public ResourceReference[]? EpisodeOfCare { get; set; }
    public EncounterHospitalization? Hospitalization { get; set; }
    public Identifier[]? Identifier { get; set; }
    public Duration? Length { get; set; }
    public EncounterLocation[]? Location { get; set; }
    public EncounterParticipant[]? Participant { get; set; }
    public ResourceReference? PartOf { get; set; }
    public Period? Period { get; set; }
    public CodeableConcept? Priority { get; set; }
    public CodeableConcept[]? ReasonCode { get; set; }
    public ResourceReference[]? ReasonReference { get; set; }
    public ResourceReference? ServiceProvider { get; set; }
    public CodeableConcept? ServiceType { get; set; }
    public required EncounterStatusEnum Status { get; set; }
    public EncounterStatusHistory[]? StatusHistory { get; set; }
    public ResourceReference? Subject { get; set; }
    public CodeableConcept[]? Type { get; set; }

    public class EncounterClassHistory : BackboneElement {
        public required Coding Class { get; set; }
        public required Period Period { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class EncounterDiagnosis : BackboneElement {
        public required ResourceReference Condition { get; set; }
        public long? Rank { get; set; }
        public CodeableConcept? Use { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class EncounterHospitalization : BackboneElement {
        public CodeableConcept? AdmitSource { get; set; }
        public ResourceReference? Destination { get; set; }
        public CodeableConcept[]? DietPreference { get; set; }
        public CodeableConcept? DischargeDisposition { get; set; }
        public ResourceReference? Origin { get; set; }
        public Identifier? PreAdmissionIdentifier { get; set; }
        public CodeableConcept? ReAdmission { get; set; }
        public CodeableConcept[]? SpecialArrangement { get; set; }
        public CodeableConcept[]? SpecialCourtesy { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class EncounterLocation : BackboneElement {
        public required ResourceReference Location { get; set; }
        public Period? Period { get; set; }
        public CodeableConcept? PhysicalType { get; set; }
        public EncounterLocationStatusEnum? Status { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class EncounterParticipant : BackboneElement {
        public ResourceReference? Individual { get; set; }
        public Period? Period { get; set; }
        public CodeableConcept[]? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }

    public class EncounterStatusHistory : BackboneElement {
        public required Period Period { get; set; }
        public required EncounterStatusEnum Status { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Helper.JsonSerializerOptions);

}

