// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class ClaimResponse : DomainResource {
    public  ClaimResponseAddItem[]? AddItem { get; set; }
    public  ClaimResponseItemAdjudication[]? Adjudication { get; set; }
    public  ResourceReference[]? CommunicationRequest { get; set; }
    public required string Created { get; set; }
    public  string? Disposition { get; set; }
    public  ClaimResponseError[]? Error { get; set; }
    public  Attachment? Form { get; set; }
    public  CodeableConcept? FormCode { get; set; }
    public  CodeableConcept? FundsReserve { get; set; }
    public  Identifier[]? Identifier { get; set; }
    public  ClaimResponseInsurance[]? Insurance { get; set; }
    public required ResourceReference Insurer { get; set; }
    public  ClaimResponseItem[]? Item { get; set; }
    public required RemittanceOutcomeEnum Outcome { get; set; }
    public required ResourceReference Patient { get; set; }
    public  CodeableConcept? PayeeType { get; set; }
    public  ClaimResponsePayment? Payment { get; set; }
    public  Period? PreAuthPeriod { get; set; }
    public  string? PreAuthRef { get; set; }
    public  ClaimResponseProcessNote[]? ProcessNote { get; set; }
    public  ResourceReference? Request { get; set; }
    public  ResourceReference? Requestor { get; set; }
    public required ClaimResponseStatusEnum Status { get; set; }
    public  CodeableConcept? SubType { get; set; }
    public  ClaimResponseTotal[]? Total { get; set; }
    public required CodeableConcept Type { get; set; }
    public required UseEnum Use { get; set; }

    public class ClaimResponseAddItem : BackboneElement {
        public required ClaimResponseItemAdjudication[] Adjudication { get; set; }
        public  CodeableConcept? BodySite { get; set; }
        public  ClaimResponseAddItemDetail[]? Detail { get; set; }
        public  long[]? DetailSequence { get; set; }
        public  decimal? Factor { get; set; }
        public  long[]? ItemSequence { get; set; }
        public  Address? LocationAddress { get; set; }
        public  CodeableConcept? LocationCodeableConcept { get; set; }
        public  ResourceReference? LocationReference { get; set; }
        public  CodeableConcept[]? Modifier { get; set; }
        public  Money? Net { get; set; }
        public  long[]? NoteNumber { get; set; }
        public required CodeableConcept ProductOrService { get; set; }
        public  CodeableConcept[]? ProgramCode { get; set; }
        public  ResourceReference[]? Provider { get; set; }
        public  Quantity? Quantity { get; set; }
        public  string? ServicedDate { get; set; }
        public  Period? ServicedPeriod { get; set; }
        public  long[]? SubdetailSequence { get; set; }
        public  CodeableConcept[]? SubSite { get; set; }
        public  Money? UnitPrice { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseAddItemDetail : BackboneElement {
        public required ClaimResponseItemAdjudication[] Adjudication { get; set; }
        public  decimal? Factor { get; set; }
        public  CodeableConcept[]? Modifier { get; set; }
        public  Money? Net { get; set; }
        public  long[]? NoteNumber { get; set; }
        public required CodeableConcept ProductOrService { get; set; }
        public  Quantity? Quantity { get; set; }
        public  ClaimResponseAddItemDetailSubDetail[]? SubDetail { get; set; }
        public  Money? UnitPrice { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseAddItemDetailSubDetail : BackboneElement {
        public required ClaimResponseItemAdjudication[] Adjudication { get; set; }
        public  decimal? Factor { get; set; }
        public  CodeableConcept[]? Modifier { get; set; }
        public  Money? Net { get; set; }
        public  long[]? NoteNumber { get; set; }
        public required CodeableConcept ProductOrService { get; set; }
        public  Quantity? Quantity { get; set; }
        public  Money? UnitPrice { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseError : BackboneElement {
        public required CodeableConcept Code { get; set; }
        public  long? DetailSequence { get; set; }
        public  long? ItemSequence { get; set; }
        public  long? SubDetailSequence { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseInsurance : BackboneElement {
        public  string? BusinessArrangement { get; set; }
        public  ResourceReference? ClaimResponse { get; set; }
        public required ResourceReference Coverage { get; set; }
        public required bool Focal { get; set; }
        public required long Sequence { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseItem : BackboneElement {
        public required ClaimResponseItemAdjudication[] Adjudication { get; set; }
        public  ClaimResponseItemDetail[]? Detail { get; set; }
        public required long ItemSequence { get; set; }
        public  long[]? NoteNumber { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseItemAdjudication : BackboneElement {
        public  Money? Amount { get; set; }
        public required CodeableConcept Category { get; set; }
        public  CodeableConcept? Reason { get; set; }
        public  decimal? Value { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseItemDetail : BackboneElement {
        public required ClaimResponseItemAdjudication[] Adjudication { get; set; }
        public required long DetailSequence { get; set; }
        public  long[]? NoteNumber { get; set; }
        public  ClaimResponseItemDetailSubDetail[]? SubDetail { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseItemDetailSubDetail : BackboneElement {
        public  ClaimResponseItemAdjudication[]? Adjudication { get; set; }
        public  long[]? NoteNumber { get; set; }
        public required long SubDetailSequence { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponsePayment : BackboneElement {
        public  Money? Adjustment { get; set; }
        public  CodeableConcept? AdjustmentReason { get; set; }
        public required Money Amount { get; set; }
        public  string? Date { get; set; }
        public  Identifier? Identifier { get; set; }
        public required CodeableConcept Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseProcessNote : BackboneElement {
        public  CodeableConcept? Language { get; set; }
        public  long? Number { get; set; }
        public required string Text { get; set; }
        public  NoteTypeEnum? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClaimResponseTotal : BackboneElement {
        public required Money Amount { get; set; }
        public required CodeableConcept Category { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

