// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class ClinicalImpression : DomainResource {
    public  ResourceReference? Assessor { get; set; }
    public  CodeableConcept? Code { get; set; }
    public  string? Date { get; set; }
    public  string? Description { get; set; }
    public  string? EffectiveDateTime { get; set; }
    public  Period? EffectivePeriod { get; set; }
    public  ResourceReference? Encounter { get; set; }
    public  ClinicalImpressionFinding[]? Finding { get; set; }
    public  Identifier[]? Identifier { get; set; }
    public  ClinicalImpressionInvestigation[]? Investigation { get; set; }
    public  Annotation[]? Note { get; set; }
    public  ResourceReference? Previous { get; set; }
    public  ResourceReference[]? Problem { get; set; }
    public  CodeableConcept[]? PrognosisCodeableConcept { get; set; }
    public  ResourceReference[]? PrognosisReference { get; set; }
    public  string[]? Protocol { get; set; }
    public required ClinicalImpressionStatusEnum Status { get; set; }
    public  CodeableConcept? StatusReason { get; set; }
    public required ResourceReference Subject { get; set; }
    public  string? Summary { get; set; }
    public  ResourceReference[]? SupportingInfo { get; set; }

    public class ClinicalImpressionFinding : BackboneElement {
        public  string? Basis { get; set; }
        public  CodeableConcept? ItemCodeableConcept { get; set; }
        public  ResourceReference? ItemReference { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ClinicalImpressionInvestigation : BackboneElement {
        public required CodeableConcept Code { get; set; }
        public  ResourceReference[]? Item { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

