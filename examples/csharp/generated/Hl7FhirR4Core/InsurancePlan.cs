// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class InsurancePlan : DomainResource {
    public ResourceReference? AdministeredBy { get; set; }
    public string[]? Alias { get; set; }
    public InsurancePlanContact[]? Contact { get; set; }
    public InsurancePlanCoverage[]? Coverage { get; set; }
    public ResourceReference[]? CoverageArea { get; set; }
    public ResourceReference[]? Endpoint { get; set; }
    public Identifier[]? Identifier { get; set; }
    public string? Name { get; set; }
    public ResourceReference[]? Network { get; set; }
    public ResourceReference? OwnedBy { get; set; }
    public Period? Period { get; set; }
    public InsurancePlanPlan[]? Plan { get; set; }
    public PublicationStatusEnum? Status { get; set; }
    public CodeableConcept[]? Type { get; set; }

    public class InsurancePlanContact : BackboneElement {
        public Address? Address { get; set; }
        public HumanName? Name { get; set; }
        public CodeableConcept? Purpose { get; set; }
        public ContactPoint[]? Telecom { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanCoverage : BackboneElement {
        public required InsurancePlanCoverageBenefit[] Benefit { get; set; }
        public ResourceReference[]? Network { get; set; }
        public required CodeableConcept Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanCoverageBenefit : BackboneElement {
        public InsurancePlanCoverageBenefitLimit[]? Limit { get; set; }
        public string? Requirement { get; set; }
        public required CodeableConcept Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanCoverageBenefitLimit : BackboneElement {
        public CodeableConcept? Code { get; set; }
        public Quantity? Value { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanPlan : BackboneElement {
        public ResourceReference[]? CoverageArea { get; set; }
        public InsurancePlanPlanGeneralCost[]? GeneralCost { get; set; }
        public Identifier[]? Identifier { get; set; }
        public ResourceReference[]? Network { get; set; }
        public InsurancePlanPlanSpecificCost[]? SpecificCost { get; set; }
        public CodeableConcept? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanPlanGeneralCost : BackboneElement {
        public string? Comment { get; set; }
        public Money? Cost { get; set; }
        public long? GroupSize { get; set; }
        public CodeableConcept? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanPlanSpecificCost : BackboneElement {
        public InsurancePlanPlanSpecificCostBenefit[]? Benefit { get; set; }
        public required CodeableConcept Category { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanPlanSpecificCostBenefit : BackboneElement {
        public InsurancePlanPlanSpecificCostBenefitCost[]? Cost { get; set; }
        public required CodeableConcept Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class InsurancePlanPlanSpecificCostBenefitCost : BackboneElement {
        public CodeableConcept? Applicability { get; set; }
        public CodeableConcept[]? Qualifiers { get; set; }
        public required CodeableConcept Type { get; set; }
        public Quantity? Value { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

