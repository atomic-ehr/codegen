// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace.Hl7FhirR4Core;

public class EvidenceVariable : DomainResource {
    public string? ApprovalDate { get; set; }
    public ContactDetail[]? Author { get; set; }
    public required EvidenceVariableCharacteristic[] Characteristic { get; set; }
    public ContactDetail[]? Contact { get; set; }
    public string? Copyright { get; set; }
    public string? Date { get; set; }
    public string? Description { get; set; }
    public ContactDetail[]? Editor { get; set; }
    public Period? EffectivePeriod { get; set; }
    public ContactDetail[]? Endorser { get; set; }
    public Identifier[]? Identifier { get; set; }
    public CodeableConcept[]? Jurisdiction { get; set; }
    public string? LastReviewDate { get; set; }
    public string? Name { get; set; }
    public Annotation[]? Note { get; set; }
    public string? Publisher { get; set; }
    public RelatedArtifact[]? RelatedArtifact { get; set; }
    public ContactDetail[]? Reviewer { get; set; }
    public string? ShortTitle { get; set; }
    public required PublicationStatusEnum Status { get; set; }
    public string? Subtitle { get; set; }
    public string? Title { get; set; }
    public CodeableConcept[]? Topic { get; set; }
    public EvidenceVariableTypeEnum? Type { get; set; }
    public string? Url { get; set; }
    public UsageContext[]? UseContext { get; set; }
    public string? Version { get; set; }

    public class EvidenceVariableCharacteristic : BackboneElement {
        public string? DefinitionCanonical { get; set; }
        public CodeableConcept? DefinitionCodeableConcept { get; set; }
        public DataRequirement? DefinitionDataRequirement { get; set; }
        public ResourceExpression? DefinitionExpression { get; set; }
        public ResourceReference? DefinitionReference { get; set; }
        public TriggerDefinition? DefinitionTriggerDefinition { get; set; }
        public string? Description { get; set; }
        public bool? Exclude { get; set; }
        public GroupMeasureEnum? GroupMeasure { get; set; }
        public string? ParticipantEffectiveDateTime { get; set; }
        public Duration? ParticipantEffectiveDuration { get; set; }
        public Period? ParticipantEffectivePeriod { get; set; }
        public Timing? ParticipantEffectiveTiming { get; set; }
        public Duration? TimeFromStart { get; set; }
        public UsageContext[]? UsageContext { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

