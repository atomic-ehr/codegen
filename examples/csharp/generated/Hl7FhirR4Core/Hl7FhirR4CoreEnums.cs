// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace SuperNameSpace.Hl7FhirR4Core;
public enum AddressTypeEnum {
    [Description("postal")]
    Postal ,
    [Description("physical")]
    Physical ,
    [Description("both")]
    Both ,
}

public enum AddressUseEnum {
    [Description("home")]
    Home ,
    [Description("work")]
    Work ,
    [Description("temp")]
    Temp ,
    [Description("old")]
    Old ,
    [Description("billing")]
    Billing ,
}

public enum ContactPointSystemEnum {
    [Description("phone")]
    Phone ,
    [Description("fax")]
    Fax ,
    [Description("email")]
    Email ,
    [Description("pager")]
    Pager ,
    [Description("url")]
    Url ,
    [Description("sms")]
    Sms ,
    [Description("other")]
    Other ,
}

public enum ContactPointUseEnum {
    [Description("home")]
    Home ,
    [Description("work")]
    Work ,
    [Description("temp")]
    Temp ,
    [Description("old")]
    Old ,
    [Description("mobile")]
    Mobile ,
}

public enum ContributorTypeEnum {
    [Description("author")]
    Author ,
    [Description("editor")]
    Editor ,
    [Description("reviewer")]
    Reviewer ,
    [Description("endorser")]
    Endorser ,
}

public enum SortDirectionEnum {
    [Description("ascending")]
    Ascending ,
    [Description("descending")]
    Descending ,
}

public enum PropertyRepresentationEnum {
    [Description("xmlAttr")]
    XmlAttr ,
    [Description("xmlText")]
    XmlText ,
    [Description("typeAttr")]
    TypeAttr ,
    [Description("cdaText")]
    CdaText ,
    [Description("xhtml")]
    Xhtml ,
}

public enum BindingStrengthEnum {
    [Description("required")]
    Required ,
    [Description("extensible")]
    Extensible ,
    [Description("preferred")]
    Preferred ,
    [Description("example")]
    Example ,
}

public enum ConstraintSeverityEnum {
    [Description("error")]
    Error ,
    [Description("warning")]
    Warning ,
}

public enum SlicingRulesEnum {
    [Description("closed")]
    Closed ,
    [Description("open")]
    Open ,
    [Description("openAtEnd")]
    OpenAtEnd ,
}

public enum DiscriminatorTypeEnum {
    [Description("value")]
    Value ,
    [Description("exists")]
    Exists ,
    [Description("pattern")]
    Pattern ,
    [Description("type")]
    Type ,
    [Description("profile")]
    Profile ,
}

public enum AggregationModeEnum {
    [Description("contained")]
    Contained ,
    [Description("referenced")]
    Referenced ,
    [Description("bundled")]
    Bundled ,
}

public enum ReferenceVersionRulesEnum {
    [Description("either")]
    Either ,
    [Description("independent")]
    Independent ,
    [Description("specific")]
    Specific ,
}

public enum NameUseEnum {
    [Description("usual")]
    Usual ,
    [Description("official")]
    Official ,
    [Description("temp")]
    Temp ,
    [Description("nickname")]
    Nickname ,
    [Description("anonymous")]
    Anonymous ,
    [Description("old")]
    Old ,
    [Description("maiden")]
    Maiden ,
}

public enum IdentifierUseEnum {
    [Description("usual")]
    Usual ,
    [Description("official")]
    Official ,
    [Description("temp")]
    Temp ,
    [Description("secondary")]
    Secondary ,
    [Description("old")]
    Old ,
}

public enum NarrativeStatusEnum {
    [Description("generated")]
    Generated ,
    [Description("extensions")]
    Extensions ,
    [Description("additional")]
    Additional ,
    [Description("empty")]
    Empty ,
}

public enum ParameterUseEnum {
    [Description("in")]
    In ,
    [Description("out")]
    Out ,
}

public enum QuantityComparatorEnum {
    [Description("<")]
    Less ,
    [Description("<=")]
    LessOrEqual ,
    [Description(">=")]
    GreaterOrEqual ,
    [Description(">")]
    Greater ,
}

public enum RelatedArtifactTypeEnum {
    [Description("documentation")]
    Documentation ,
    [Description("justification")]
    Justification ,
    [Description("citation")]
    Citation ,
    [Description("predecessor")]
    Predecessor ,
    [Description("successor")]
    Successor ,
    [Description("derived-from")]
    DerivedDashFrom ,
    [Description("depends-on")]
    DependsDashOn ,
    [Description("composed-of")]
    ComposedDashOf ,
}

public enum DayOfWeekEnum {
    [Description("mon")]
    Mon ,
    [Description("tue")]
    Tue ,
    [Description("wed")]
    Wed ,
    [Description("thu")]
    Thu ,
    [Description("fri")]
    Fri ,
    [Description("sat")]
    Sat ,
    [Description("sun")]
    Sun ,
}

public enum UnitsOfTimeEnum {
    [Description("s")]
    S ,
    [Description("min")]
    Min ,
    [Description("h")]
    H ,
    [Description("d")]
    D ,
    [Description("wk")]
    Wk ,
    [Description("mo")]
    Mo ,
    [Description("a")]
    A ,
}

public enum EventTimingEnum {
    [Description("MORN")]
    MORN ,
    [Description("MORN.early")]
    MORNDotearly ,
    [Description("MORN.late")]
    MORNDotlate ,
    [Description("NOON")]
    NOON ,
    [Description("AFT")]
    AFT ,
    [Description("AFT.early")]
    AFTDotearly ,
    [Description("AFT.late")]
    AFTDotlate ,
    [Description("EVE")]
    EVE ,
    [Description("EVE.early")]
    EVEDotearly ,
    [Description("EVE.late")]
    EVEDotlate ,
    [Description("NIGHT")]
    NIGHT ,
    [Description("PHS")]
    PHS ,
    [Description("HS")]
    HS ,
    [Description("WAKE")]
    WAKE ,
    [Description("C")]
    C ,
    [Description("CM")]
    CM ,
    [Description("CD")]
    CD ,
    [Description("CV")]
    CV ,
    [Description("AC")]
    AC ,
    [Description("ACM")]
    ACM ,
    [Description("ACD")]
    ACD ,
    [Description("ACV")]
    ACV ,
    [Description("PC")]
    PC ,
    [Description("PCM")]
    PCM ,
    [Description("PCD")]
    PCD ,
    [Description("PCV")]
    PCV ,
}

public enum TriggerTypeEnum {
    [Description("named-event")]
    NamedDashEvent ,
    [Description("periodic")]
    Periodic ,
    [Description("data-changed")]
    DataDashChanged ,
    [Description("data-added")]
    DataDashAdded ,
    [Description("data-modified")]
    DataDashModified ,
    [Description("data-removed")]
    DataDashRemoved ,
    [Description("data-accessed")]
    DataDashAccessed ,
    [Description("data-access-ended")]
    DataDashAccessDashEnded ,
}

public enum AccountStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("unknown")]
    Unknown ,
}

public enum RequestIntentEnum {
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("directive")]
    Directive ,
    [Description("order")]
    Order ,
    [Description("original-order")]
    OriginalDashOrder ,
    [Description("reflex-order")]
    ReflexDashOrder ,
    [Description("filler-order")]
    FillerDashOrder ,
    [Description("instance-order")]
    InstanceDashOrder ,
    [Description("option")]
    Option ,
}

public enum ActivityDefinitionKindEnum {
    [Description("Appointment")]
    Appointment ,
    [Description("AppointmentResponse")]
    AppointmentResponse ,
    [Description("CarePlan")]
    CarePlan ,
    [Description("Claim")]
    Claim ,
    [Description("CommunicationRequest")]
    CommunicationRequest ,
    [Description("Contract")]
    Contract ,
    [Description("DeviceRequest")]
    DeviceRequest ,
    [Description("EnrollmentRequest")]
    EnrollmentRequest ,
    [Description("ImmunizationRecommendation")]
    ImmunizationRecommendation ,
    [Description("MedicationRequest")]
    MedicationRequest ,
    [Description("NutritionOrder")]
    NutritionOrder ,
    [Description("ServiceRequest")]
    ServiceRequest ,
    [Description("SupplyRequest")]
    SupplyRequest ,
    [Description("Task")]
    Task ,
    [Description("VisionPrescription")]
    VisionPrescription ,
}

public enum RequestPriorityEnum {
    [Description("routine")]
    Routine ,
    [Description("urgent")]
    Urgent ,
    [Description("asap")]
    Asap ,
    [Description("stat")]
    Stat ,
}

public enum PublicationStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("retired")]
    Retired ,
    [Description("unknown")]
    Unknown ,
}

public enum ActivityParticipantTypeEnum {
    [Description("patient")]
    Patient ,
    [Description("practitioner")]
    Practitioner ,
    [Description("related-person")]
    RelatedDashPerson ,
    [Description("device")]
    Device ,
}

public enum AdverseEventActualityEnum {
    [Description("actual")]
    Actual ,
    [Description("potential")]
    Potential ,
}

public enum AllergyIntoleranceCategoryEnum {
    [Description("food")]
    Food ,
    [Description("medication")]
    Medication ,
    [Description("environment")]
    Environment ,
    [Description("biologic")]
    Biologic ,
}

public enum AllergyIntoleranceCriticalityEnum {
    [Description("low")]
    Low ,
    [Description("high")]
    High ,
    [Description("unable-to-assess")]
    UnableDashToDashAssess ,
}

public enum AllergyIntoleranceTypeEnum {
    [Description("allergy")]
    Allergy ,
    [Description("intolerance")]
    Intolerance ,
}

public enum AllergyIntoleranceSeverityEnum {
    [Description("mild")]
    Mild ,
    [Description("moderate")]
    Moderate ,
    [Description("severe")]
    Severe ,
}

public enum AppointmentStatusEnum {
    [Description("proposed")]
    Proposed ,
    [Description("pending")]
    Pending ,
    [Description("booked")]
    Booked ,
    [Description("arrived")]
    Arrived ,
    [Description("fulfilled")]
    Fulfilled ,
    [Description("cancelled")]
    Cancelled ,
    [Description("noshow")]
    Noshow ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("checked-in")]
    CheckedDashIn ,
    [Description("waitlist")]
    Waitlist ,
}

public enum ParticipantRequiredEnum {
    [Description("required")]
    Required ,
    [Description("optional")]
    Optional ,
    [Description("information-only")]
    InformationDashOnly ,
}

public enum ParticipationStatusEnum {
    [Description("accepted")]
    Accepted ,
    [Description("declined")]
    Declined ,
    [Description("tentative")]
    Tentative ,
    [Description("needs-action")]
    NeedsDashAction ,
}

public enum ParticipantStatusEnum {
    [Description("accepted")]
    Accepted ,
    [Description("declined")]
    Declined ,
    [Description("tentative")]
    Tentative ,
    [Description("needs-action")]
    NeedsDashAction ,
}

public enum AuditEventActionEnum {
    [Description("C")]
    C ,
    [Description("R")]
    R ,
    [Description("U")]
    U ,
    [Description("D")]
    D ,
    [Description("E")]
    E ,
}

public enum AuditEventOutcomeEnum {
    [Description("0")]
    _0 ,
    [Description("4")]
    _4 ,
    [Description("8")]
    _8 ,
    [Description("12")]
    _12 ,
}

public enum AuditEventAgentNetworkTypeEnum {
    [Description("1")]
    _1 ,
    [Description("2")]
    _2 ,
    [Description("3")]
    _3 ,
    [Description("4")]
    _4 ,
    [Description("5")]
    _5 ,
}

public enum BiologicallyDerivedProductCategoryEnum {
    [Description("organ")]
    Organ ,
    [Description("tissue")]
    Tissue ,
    [Description("fluid")]
    Fluid ,
    [Description("cells")]
    Cells ,
    [Description("biologicalAgent")]
    BiologicalAgent ,
}

public enum BiologicallyDerivedProductStatusEnum {
    [Description("available")]
    Available ,
    [Description("unavailable")]
    Unavailable ,
}

public enum BiologicallyDerivedProductStorageScaleEnum {
    [Description("farenheit")]
    Farenheit ,
    [Description("celsius")]
    Celsius ,
    [Description("kelvin")]
    Kelvin ,
}

public enum BundleTypeEnum {
    [Description("document")]
    Document ,
    [Description("message")]
    Message ,
    [Description("transaction")]
    Transaction ,
    [Description("transaction-response")]
    TransactionDashResponse ,
    [Description("batch")]
    Batch ,
    [Description("batch-response")]
    BatchDashResponse ,
    [Description("history")]
    History ,
    [Description("searchset")]
    Searchset ,
    [Description("collection")]
    Collection ,
}

public enum HttpverbEnum {
    [Description("GET")]
    GET ,
    [Description("HEAD")]
    HEAD ,
    [Description("POST")]
    POST ,
    [Description("PUT")]
    PUT ,
    [Description("DELETE")]
    DELETE ,
    [Description("PATCH")]
    PATCH ,
}

public enum SearchEntryModeEnum {
    [Description("match")]
    Match ,
    [Description("include")]
    Include ,
    [Description("outcome")]
    Outcome ,
}

public enum FhirversionEnum {
    [Description("0.01")]
    _0Dot01 ,
    [Description("0.05")]
    _0Dot05 ,
    [Description("0.06")]
    _0Dot06 ,
    [Description("0.11")]
    _0Dot11 ,
    [Description("0.0.80")]
    _0Dot0Dot80 ,
    [Description("0.0.81")]
    _0Dot0Dot81 ,
    [Description("0.0.82")]
    _0Dot0Dot82 ,
    [Description("0.4.0")]
    _0Dot4Dot0 ,
    [Description("0.5.0")]
    _0Dot5Dot0 ,
    [Description("1.0.0")]
    _1Dot0Dot0 ,
    [Description("1.0.1")]
    _1Dot0Dot1 ,
    [Description("1.0.2")]
    _1Dot0Dot2 ,
    [Description("1.1.0")]
    _1Dot1Dot0 ,
    [Description("1.4.0")]
    _1Dot4Dot0 ,
    [Description("1.6.0")]
    _1Dot6Dot0 ,
    [Description("1.8.0")]
    _1Dot8Dot0 ,
    [Description("3.0.0")]
    _3Dot0Dot0 ,
    [Description("3.0.1")]
    _3Dot0Dot1 ,
    [Description("3.3.0")]
    _3Dot3Dot0 ,
    [Description("3.5.0")]
    _3Dot5Dot0 ,
    [Description("4.0.0")]
    _4Dot0Dot0 ,
    [Description("4.0.1")]
    _4Dot0Dot1 ,
}

public enum CapabilityStatementKindEnum {
    [Description("instance")]
    Instance ,
    [Description("capability")]
    Capability ,
    [Description("requirements")]
    Requirements ,
}

public enum DocumentModeEnum {
    [Description("producer")]
    Producer ,
    [Description("consumer")]
    Consumer ,
}

public enum EventCapabilityModeEnum {
    [Description("sender")]
    Sender ,
    [Description("receiver")]
    Receiver ,
}

public enum RestfulCapabilityModeEnum {
    [Description("client")]
    Client ,
    [Description("server")]
    Server ,
}

public enum SystemRestfulInteractionEnum {
    [Description("transaction")]
    Transaction ,
    [Description("batch")]
    Batch ,
    [Description("search-system")]
    SearchDashSystem ,
    [Description("history-system")]
    HistoryDashSystem ,
}

public enum ConditionalDeleteStatusEnum {
    [Description("not-supported")]
    NotDashSupported ,
    [Description("single")]
    Single ,
    [Description("multiple")]
    Multiple ,
}

public enum ConditionalReadStatusEnum {
    [Description("not-supported")]
    NotDashSupported ,
    [Description("modified-since")]
    ModifiedDashSince ,
    [Description("not-match")]
    NotDashMatch ,
    [Description("full-support")]
    FullDashSupport ,
}

public enum ReferenceHandlingPolicyEnum {
    [Description("literal")]
    Literal ,
    [Description("logical")]
    Logical ,
    [Description("resolves")]
    Resolves ,
    [Description("enforced")]
    Enforced ,
    [Description("local")]
    Local ,
}

public enum ResourceVersionPolicyEnum {
    [Description("no-version")]
    NoDashVersion ,
    [Description("versioned")]
    Versioned ,
    [Description("versioned-update")]
    VersionedDashUpdate ,
}

public enum TypeRestfulInteractionEnum {
    [Description("read")]
    Read ,
    [Description("vread")]
    Vread ,
    [Description("update")]
    Update ,
    [Description("patch")]
    Patch ,
    [Description("delete")]
    Delete ,
    [Description("history-instance")]
    HistoryDashInstance ,
    [Description("history-type")]
    HistoryDashType ,
    [Description("create")]
    Create ,
    [Description("search-type")]
    SearchDashType ,
}

public enum SearchParamTypeEnum {
    [Description("number")]
    Number ,
    [Description("date")]
    Date ,
    [Description("string")]
    String ,
    [Description("token")]
    Token ,
    [Description("reference")]
    Reference ,
    [Description("composite")]
    Composite ,
    [Description("quantity")]
    Quantity ,
    [Description("uri")]
    Uri ,
    [Description("special")]
    Special ,
}

public enum CarePlanIntentEnum {
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("order")]
    Order ,
    [Description("option")]
    Option ,
}

public enum CarePlanStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum CarePlanActivityKindEnum {
    [Description("Appointment")]
    Appointment ,
    [Description("CommunicationRequest")]
    CommunicationRequest ,
    [Description("DeviceRequest")]
    DeviceRequest ,
    [Description("MedicationRequest")]
    MedicationRequest ,
    [Description("NutritionOrder")]
    NutritionOrder ,
    [Description("Task")]
    Task ,
    [Description("ServiceRequest")]
    ServiceRequest ,
    [Description("VisionPrescription")]
    VisionPrescription ,
}

public enum CarePlanActivityStatusEnum {
    [Description("not-started")]
    NotDashStarted ,
    [Description("scheduled")]
    Scheduled ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("completed")]
    Completed ,
    [Description("cancelled")]
    Cancelled ,
    [Description("stopped")]
    Stopped ,
    [Description("unknown")]
    Unknown ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum CareTeamStatusEnum {
    [Description("proposed")]
    Proposed ,
    [Description("active")]
    Active ,
    [Description("suspended")]
    Suspended ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum CatalogEntryRelationTypeEnum {
    [Description("triggers")]
    Triggers ,
    [Description("is-replaced-by")]
    IsDashReplacedDashBy ,
}

public enum ChargeItemStatusEnum {
    [Description("planned")]
    Planned ,
    [Description("billable")]
    Billable ,
    [Description("not-billable")]
    NotDashBillable ,
    [Description("aborted")]
    Aborted ,
    [Description("billed")]
    Billed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ChargeItemDefinitionPriceComponentTypeEnum {
    [Description("base")]
    Base ,
    [Description("surcharge")]
    Surcharge ,
    [Description("deduction")]
    Deduction ,
    [Description("discount")]
    Discount ,
    [Description("tax")]
    Tax ,
    [Description("informational")]
    Informational ,
}

public enum ClaimStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum UseEnum {
    [Description("claim")]
    Claim ,
    [Description("preauthorization")]
    Preauthorization ,
    [Description("predetermination")]
    Predetermination ,
}

public enum RemittanceOutcomeEnum {
    [Description("queued")]
    Queued ,
    [Description("complete")]
    Complete ,
    [Description("error")]
    Error ,
    [Description("partial")]
    Partial ,
}

public enum ClaimResponseStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum NoteTypeEnum {
    [Description("display")]
    Display ,
    [Description("print")]
    Print ,
    [Description("printoper")]
    Printoper ,
}

public enum ClinicalImpressionStatusEnum {
    [Description("in-progress")]
    InDashProgress ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum CodeSystemContentModeEnum {
    [Description("not-present")]
    NotDashPresent ,
    [Description("example")]
    Example ,
    [Description("fragment")]
    Fragment ,
    [Description("complete")]
    Complete ,
    [Description("supplement")]
    Supplement ,
}

public enum CodeSystemHierarchyMeaningEnum {
    [Description("grouped-by")]
    GroupedDashBy ,
    [Description("is-a")]
    IsDashA ,
    [Description("part-of")]
    PartDashOf ,
    [Description("classified-with")]
    ClassifiedDashWith ,
}

public enum FilterOperatorEnum {
    [Description("=")]
    Equal ,
    [Description("is-a")]
    IsDashA ,
    [Description("descendent-of")]
    DescendentDashOf ,
    [Description("is-not-a")]
    IsDashNotDashA ,
    [Description("regex")]
    Regex ,
    [Description("in")]
    In ,
    [Description("not-in")]
    NotDashIn ,
    [Description("generalizes")]
    Generalizes ,
    [Description("exists")]
    Exists ,
}

public enum PropertyTypeEnum {
    [Description("code")]
    Code ,
    [Description("Coding")]
    Coding ,
    [Description("string")]
    String ,
    [Description("integer")]
    Integer ,
    [Description("boolean")]
    Boolean ,
    [Description("dateTime")]
    DateTime ,
    [Description("decimal")]
    Decimal ,
}

public enum CommunicationPriorityEnum {
    [Description("routine")]
    Routine ,
    [Description("urgent")]
    Urgent ,
    [Description("asap")]
    Asap ,
    [Description("stat")]
    Stat ,
}

public enum CommunicationStatusEnum {
    [Description("preparation")]
    Preparation ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("not-done")]
    NotDashDone ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("stopped")]
    Stopped ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum CommunicationRequestStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum CompartmentTypeEnum {
    [Description("Patient")]
    Patient ,
    [Description("Encounter")]
    Encounter ,
    [Description("RelatedPerson")]
    RelatedPerson ,
    [Description("Practitioner")]
    Practitioner ,
    [Description("Device")]
    Device ,
}

public enum DocumentConfidentialityEnum {
    [Description("U")]
    U ,
    [Description("L")]
    L ,
    [Description("M")]
    M ,
    [Description("N")]
    N ,
    [Description("R")]
    R ,
    [Description("V")]
    V ,
}

public enum CompositionStatusEnum {
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum CompositionAttestationModeEnum {
    [Description("personal")]
    Personal ,
    [Description("professional")]
    Professional ,
    [Description("legal")]
    Legal ,
    [Description("official")]
    Official ,
}

public enum DocumentRelationshipTypeEnum {
    [Description("replaces")]
    Replaces ,
    [Description("transforms")]
    Transforms ,
    [Description("signs")]
    Signs ,
    [Description("appends")]
    Appends ,
}

public enum SectionModeEnum {
    [Description("working")]
    Working ,
    [Description("snapshot")]
    Snapshot ,
    [Description("changes")]
    Changes ,
}

public enum ConceptMapEquivalenceEnum {
    [Description("relatedto")]
    Relatedto ,
    [Description("equivalent")]
    Equivalent ,
    [Description("equal")]
    Equal ,
    [Description("wider")]
    Wider ,
    [Description("subsumes")]
    Subsumes ,
    [Description("narrower")]
    Narrower ,
    [Description("specializes")]
    Specializes ,
    [Description("inexact")]
    Inexact ,
    [Description("unmatched")]
    Unmatched ,
    [Description("disjoint")]
    Disjoint ,
}

public enum ConceptMapGroupUnmappedModeEnum {
    [Description("provided")]
    Provided ,
    [Description("fixed")]
    Fixed ,
    [Description("other-map")]
    OtherDashMap ,
}

public enum ConsentStateEnum {
    [Description("draft")]
    Draft ,
    [Description("proposed")]
    Proposed ,
    [Description("active")]
    Active ,
    [Description("rejected")]
    Rejected ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum ConsentProvisionTypeEnum {
    [Description("deny")]
    Deny ,
    [Description("permit")]
    Permit ,
}

public enum ConsentDataMeaningEnum {
    [Description("instance")]
    Instance ,
    [Description("related")]
    Related ,
    [Description("dependents")]
    Dependents ,
    [Description("authoredby")]
    Authoredby ,
}

public enum ContractStatusEnum {
    [Description("amended")]
    Amended ,
    [Description("appended")]
    Appended ,
    [Description("cancelled")]
    Cancelled ,
    [Description("disputed")]
    Disputed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("executable")]
    Executable ,
    [Description("executed")]
    Executed ,
    [Description("negotiable")]
    Negotiable ,
    [Description("offered")]
    Offered ,
    [Description("policy")]
    Policy ,
    [Description("rejected")]
    Rejected ,
    [Description("renewed")]
    Renewed ,
    [Description("revoked")]
    Revoked ,
    [Description("resolved")]
    Resolved ,
    [Description("terminated")]
    Terminated ,
}

public enum ContractPublicationStatusEnum {
    [Description("amended")]
    Amended ,
    [Description("appended")]
    Appended ,
    [Description("cancelled")]
    Cancelled ,
    [Description("disputed")]
    Disputed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("executable")]
    Executable ,
    [Description("executed")]
    Executed ,
    [Description("negotiable")]
    Negotiable ,
    [Description("offered")]
    Offered ,
    [Description("policy")]
    Policy ,
    [Description("rejected")]
    Rejected ,
    [Description("renewed")]
    Renewed ,
    [Description("revoked")]
    Revoked ,
    [Description("resolved")]
    Resolved ,
    [Description("terminated")]
    Terminated ,
}

public enum CoverageStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum EligibilityRequestPurposeEnum {
    [Description("auth-requirements")]
    AuthDashRequirements ,
    [Description("benefits")]
    Benefits ,
    [Description("discovery")]
    Discovery ,
    [Description("validation")]
    Validation ,
}

public enum EligibilityRequestStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum EligibilityResponsePurposeEnum {
    [Description("auth-requirements")]
    AuthDashRequirements ,
    [Description("benefits")]
    Benefits ,
    [Description("discovery")]
    Discovery ,
    [Description("validation")]
    Validation ,
}

public enum EligibilityResponseStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum DetectedIssueSeverityEnum {
    [Description("high")]
    High ,
    [Description("moderate")]
    Moderate ,
    [Description("low")]
    Low ,
}

public enum DetectedIssueStatusEnum {
    [Description("registered")]
    Registered ,
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("corrected")]
    Corrected ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum FhirdeviceStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum DeviceNameTypeEnum {
    [Description("udi-label-name")]
    UdiDashLabelDashName ,
    [Description("user-friendly-name")]
    UserDashFriendlyDashName ,
    [Description("patient-reported-name")]
    PatientDashReportedDashName ,
    [Description("manufacturer-name")]
    ManufacturerDashName ,
    [Description("model-name")]
    ModelDashName ,
    [Description("other")]
    Other ,
}

public enum UdientryTypeEnum {
    [Description("barcode")]
    Barcode ,
    [Description("rfid")]
    Rfid ,
    [Description("manual")]
    Manual ,
    [Description("card")]
    Card ,
    [Description("self-reported")]
    SelfDashReported ,
    [Description("unknown")]
    Unknown ,
}

public enum DeviceMetricCategoryEnum {
    [Description("measurement")]
    Measurement ,
    [Description("setting")]
    Setting ,
    [Description("calculation")]
    Calculation ,
    [Description("unspecified")]
    Unspecified ,
}

public enum DeviceMetricColorEnum {
    [Description("black")]
    Black ,
    [Description("red")]
    Red ,
    [Description("green")]
    Green ,
    [Description("yellow")]
    Yellow ,
    [Description("blue")]
    Blue ,
    [Description("magenta")]
    Magenta ,
    [Description("cyan")]
    Cyan ,
    [Description("white")]
    White ,
}

public enum DeviceMetricOperationalStatusEnum {
    [Description("on")]
    On ,
    [Description("off")]
    Off ,
    [Description("standby")]
    Standby ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum DeviceMetricCalibrationStateEnum {
    [Description("not-calibrated")]
    NotDashCalibrated ,
    [Description("calibration-required")]
    CalibrationDashRequired ,
    [Description("calibrated")]
    Calibrated ,
    [Description("unspecified")]
    Unspecified ,
}

public enum DeviceMetricCalibrationTypeEnum {
    [Description("unspecified")]
    Unspecified ,
    [Description("offset")]
    Offset ,
    [Description("gain")]
    Gain ,
    [Description("two-point")]
    TwoDashPoint ,
}

public enum DeviceRequestStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum DeviceUseStatementStatusEnum {
    [Description("active")]
    Active ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("intended")]
    Intended ,
    [Description("stopped")]
    Stopped ,
    [Description("on-hold")]
    OnDashHold ,
}

public enum DiagnosticReportStatusEnum {
    [Description("registered")]
    Registered ,
    [Description("partial")]
    Partial ,
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("corrected")]
    Corrected ,
    [Description("appended")]
    Appended ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum DocumentReferenceStatusEnum {
    [Description("current")]
    Current ,
    [Description("superseded")]
    Superseded ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum ReferredDocumentStatusEnum {
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum ExposureStateEnum {
    [Description("exposure")]
    Exposure ,
    [Description("exposure-alternative")]
    ExposureDashAlternative ,
}

public enum EncounterStatusEnum {
    [Description("planned")]
    Planned ,
    [Description("arrived")]
    Arrived ,
    [Description("triaged")]
    Triaged ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("onleave")]
    Onleave ,
    [Description("finished")]
    Finished ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum EncounterLocationStatusEnum {
    [Description("planned")]
    Planned ,
    [Description("active")]
    Active ,
    [Description("reserved")]
    Reserved ,
    [Description("completed")]
    Completed ,
}

public enum EndpointStatusEnum {
    [Description("active")]
    Active ,
    [Description("suspended")]
    Suspended ,
    [Description("error")]
    Error ,
    [Description("off")]
    Off ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("test")]
    Test ,
}

public enum EnrollmentRequestStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum EnrollmentResponseStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum EpisodeOfCareStatusEnum {
    [Description("planned")]
    Planned ,
    [Description("waitlist")]
    Waitlist ,
    [Description("active")]
    Active ,
    [Description("onhold")]
    Onhold ,
    [Description("finished")]
    Finished ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum EvidenceVariableTypeEnum {
    [Description("dichotomous")]
    Dichotomous ,
    [Description("continuous")]
    Continuous ,
    [Description("descriptive")]
    Descriptive ,
}

public enum GroupMeasureEnum {
    [Description("mean")]
    Mean ,
    [Description("median")]
    Median ,
    [Description("mean-of-mean")]
    MeanDashOfDashMean ,
    [Description("mean-of-median")]
    MeanDashOfDashMedian ,
    [Description("median-of-mean")]
    MedianDashOfDashMean ,
    [Description("median-of-median")]
    MedianDashOfDashMedian ,
}

public enum ExampleScenarioActorTypeEnum {
    [Description("person")]
    Person ,
    [Description("entity")]
    Entity ,
}

public enum ExplanationOfBenefitStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum FamilyHistoryStatusEnum {
    [Description("partial")]
    Partial ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("health-unknown")]
    HealthDashUnknown ,
}

public enum FlagStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum GoalLifecycleStatusEnum {
    [Description("proposed")]
    Proposed ,
    [Description("planned")]
    Planned ,
    [Description("accepted")]
    Accepted ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("completed")]
    Completed ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("rejected")]
    Rejected ,
}

public enum CompartmentCodeEnum {
    [Description("Patient")]
    Patient ,
    [Description("Encounter")]
    Encounter ,
    [Description("RelatedPerson")]
    RelatedPerson ,
    [Description("Practitioner")]
    Practitioner ,
    [Description("Device")]
    Device ,
}

public enum GraphCompartmentRuleEnum {
    [Description("identical")]
    Identical ,
    [Description("matching")]
    Matching ,
    [Description("different")]
    Different ,
    [Description("custom")]
    Custom ,
}

public enum GraphCompartmentUseEnum {
    [Description("condition")]
    Condition ,
    [Description("requirement")]
    Requirement ,
}

public enum GroupTypeEnum {
    [Description("person")]
    Person ,
    [Description("animal")]
    Animal ,
    [Description("practitioner")]
    Practitioner ,
    [Description("device")]
    Device ,
    [Description("medication")]
    Medication ,
    [Description("substance")]
    Substance ,
}

public enum GuidanceResponseStatusEnum {
    [Description("success")]
    Success ,
    [Description("data-requested")]
    DataDashRequested ,
    [Description("data-required")]
    DataDashRequired ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("failure")]
    Failure ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum DaysOfWeekEnum {
    [Description("mon")]
    Mon ,
    [Description("tue")]
    Tue ,
    [Description("wed")]
    Wed ,
    [Description("thu")]
    Thu ,
    [Description("fri")]
    Fri ,
    [Description("sat")]
    Sat ,
    [Description("sun")]
    Sun ,
}

public enum ImagingStudyStatusEnum {
    [Description("registered")]
    Registered ,
    [Description("available")]
    Available ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ImmunizationStatusEnum {
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("not-done")]
    NotDashDone ,
}

public enum ImmunizationEvaluationStatusEnum {
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum GuidePageGenerationEnum {
    [Description("html")]
    Html ,
    [Description("markdown")]
    Markdown ,
    [Description("xml")]
    Xml ,
    [Description("generated")]
    Generated ,
}

public enum GuideParameterCodeEnum {
    [Description("apply")]
    Apply ,
    [Description("path-resource")]
    PathDashResource ,
    [Description("path-pages")]
    PathDashPages ,
    [Description("path-tx-cache")]
    PathDashTxDashCache ,
    [Description("expansion-parameter")]
    ExpansionDashParameter ,
    [Description("rule-broken-links")]
    RuleDashBrokenDashLinks ,
    [Description("generate-xml")]
    GenerateDashXml ,
    [Description("generate-json")]
    GenerateDashJson ,
    [Description("generate-turtle")]
    GenerateDashTurtle ,
    [Description("html-template")]
    HtmlDashTemplate ,
}

public enum InvoiceStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("issued")]
    Issued ,
    [Description("balanced")]
    Balanced ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum InvoicePriceComponentTypeEnum {
    [Description("base")]
    Base ,
    [Description("surcharge")]
    Surcharge ,
    [Description("deduction")]
    Deduction ,
    [Description("discount")]
    Discount ,
    [Description("tax")]
    Tax ,
    [Description("informational")]
    Informational ,
}

public enum LinkageTypeEnum {
    [Description("source")]
    Source ,
    [Description("alternate")]
    Alternate ,
    [Description("historical")]
    Historical ,
}

public enum ListModeEnum {
    [Description("working")]
    Working ,
    [Description("snapshot")]
    Snapshot ,
    [Description("changes")]
    Changes ,
}

public enum ListStatusEnum {
    [Description("current")]
    Current ,
    [Description("retired")]
    Retired ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum LocationModeEnum {
    [Description("instance")]
    Instance ,
    [Description("kind")]
    Kind ,
}

public enum LocationStatusEnum {
    [Description("active")]
    Active ,
    [Description("suspended")]
    Suspended ,
    [Description("inactive")]
    Inactive ,
}

public enum MeasureReportStatusEnum {
    [Description("complete")]
    Complete ,
    [Description("pending")]
    Pending ,
    [Description("error")]
    Error ,
}

public enum MeasureReportTypeEnum {
    [Description("individual")]
    Individual ,
    [Description("subject-list")]
    SubjectDashList ,
    [Description("summary")]
    Summary ,
    [Description("data-collection")]
    DataDashCollection ,
}

public enum MediaStatusEnum {
    [Description("preparation")]
    Preparation ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("not-done")]
    NotDashDone ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("stopped")]
    Stopped ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum MedicationStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum MedicationAdministrationStatusEnum {
    [Description("in-progress")]
    InDashProgress ,
    [Description("not-done")]
    NotDashDone ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("stopped")]
    Stopped ,
    [Description("unknown")]
    Unknown ,
}

public enum MedicationDispenseStatusEnum {
    [Description("preparation")]
    Preparation ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("cancelled")]
    Cancelled ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("stopped")]
    Stopped ,
    [Description("declined")]
    Declined ,
    [Description("unknown")]
    Unknown ,
}

public enum MedicationKnowledgeStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum MedicationRequestIntentEnum {
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("order")]
    Order ,
    [Description("original-order")]
    OriginalDashOrder ,
    [Description("reflex-order")]
    ReflexDashOrder ,
    [Description("filler-order")]
    FillerDashOrder ,
    [Description("instance-order")]
    InstanceDashOrder ,
    [Description("option")]
    Option ,
}

public enum MedicationRequestPriorityEnum {
    [Description("routine")]
    Routine ,
    [Description("urgent")]
    Urgent ,
    [Description("asap")]
    Asap ,
    [Description("stat")]
    Stat ,
}

public enum MedicationRequestStatusEnum {
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("cancelled")]
    Cancelled ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("stopped")]
    Stopped ,
    [Description("draft")]
    Draft ,
    [Description("unknown")]
    Unknown ,
}

public enum MedicationStatementStatusEnum {
    [Description("active")]
    Active ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("intended")]
    Intended ,
    [Description("stopped")]
    Stopped ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("unknown")]
    Unknown ,
    [Description("not-taken")]
    NotDashTaken ,
}

public enum MessageSignificanceCategoryEnum {
    [Description("consequence")]
    Consequence ,
    [Description("currency")]
    Currency ,
    [Description("notification")]
    Notification ,
}

public enum MessageheaderResponseRequestEnum {
    [Description("always")]
    Always ,
    [Description("on-error")]
    OnDashError ,
    [Description("never")]
    Never ,
    [Description("on-success")]
    OnDashSuccess ,
}

public enum ResponseTypeEnum {
    [Description("ok")]
    Ok ,
    [Description("transient-error")]
    TransientDashError ,
    [Description("fatal-error")]
    FatalDashError ,
}

public enum SequenceTypeEnum {
    [Description("aa")]
    Aa ,
    [Description("dna")]
    Dna ,
    [Description("rna")]
    Rna ,
}

public enum QualityTypeEnum {
    [Description("indel")]
    Indel ,
    [Description("snp")]
    Snp ,
    [Description("unknown")]
    Unknown ,
}

public enum OrientationTypeEnum {
    [Description("sense")]
    Sense ,
    [Description("antisense")]
    Antisense ,
}

public enum StrandTypeEnum {
    [Description("watson")]
    Watson ,
    [Description("crick")]
    Crick ,
}

public enum RepositoryTypeEnum {
    [Description("directlink")]
    Directlink ,
    [Description("openapi")]
    Openapi ,
    [Description("login")]
    Login ,
    [Description("oauth")]
    Oauth ,
    [Description("other")]
    Other ,
}

public enum NamingSystemTypeEnum {
    [Description("codesystem")]
    Codesystem ,
    [Description("identifier")]
    Identifier ,
    [Description("root")]
    Root ,
}

public enum NamingSystemIdentifierTypeEnum {
    [Description("oid")]
    Oid ,
    [Description("uuid")]
    Uuid ,
    [Description("uri")]
    Uri ,
    [Description("other")]
    Other ,
}

public enum NutritiionOrderIntentEnum {
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("directive")]
    Directive ,
    [Description("order")]
    Order ,
    [Description("original-order")]
    OriginalDashOrder ,
    [Description("reflex-order")]
    ReflexDashOrder ,
    [Description("filler-order")]
    FillerDashOrder ,
    [Description("instance-order")]
    InstanceDashOrder ,
    [Description("option")]
    Option ,
}

public enum NutritionOrderStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ObservationStatusEnum {
    [Description("registered")]
    Registered ,
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("corrected")]
    Corrected ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ObservationDataTypeEnum {
    [Description("Quantity")]
    Quantity ,
    [Description("CodeableConcept")]
    CodeableConcept ,
    [Description("string")]
    String ,
    [Description("boolean")]
    Boolean ,
    [Description("integer")]
    Integer ,
    [Description("Range")]
    Range ,
    [Description("Ratio")]
    Ratio ,
    [Description("SampledData")]
    SampledData ,
    [Description("time")]
    Time ,
    [Description("dateTime")]
    DateTime ,
    [Description("Period")]
    Period ,
}

public enum ObservationRangeCategoryEnum {
    [Description("reference")]
    Reference ,
    [Description("critical")]
    Critical ,
    [Description("absolute")]
    Absolute ,
}

public enum AdministrativeGenderEnum {
    [Description("male")]
    Male ,
    [Description("female")]
    Female ,
    [Description("other")]
    Other ,
    [Description("unknown")]
    Unknown ,
}

public enum OperationKindEnum {
    [Description("operation")]
    Operation ,
    [Description("query")]
    Query ,
}

public enum OperationParameterUseEnum {
    [Description("in")]
    In ,
    [Description("out")]
    Out ,
}

public enum IssueTypeEnum {
    [Description("invalid")]
    Invalid ,
    [Description("structure")]
    Structure ,
    [Description("required")]
    Required ,
    [Description("value")]
    Value ,
    [Description("invariant")]
    Invariant ,
    [Description("security")]
    Security ,
    [Description("login")]
    Login ,
    [Description("unknown")]
    Unknown ,
    [Description("expired")]
    Expired ,
    [Description("forbidden")]
    Forbidden ,
    [Description("suppressed")]
    Suppressed ,
    [Description("processing")]
    Processing ,
    [Description("not-supported")]
    NotDashSupported ,
    [Description("duplicate")]
    Duplicate ,
    [Description("multiple-matches")]
    MultipleDashMatches ,
    [Description("not-found")]
    NotDashFound ,
    [Description("deleted")]
    Deleted ,
    [Description("too-long")]
    TooDashLong ,
    [Description("code-invalid")]
    CodeDashInvalid ,
    [Description("extension")]
    Extension ,
    [Description("too-costly")]
    TooDashCostly ,
    [Description("business-rule")]
    BusinessDashRule ,
    [Description("conflict")]
    Conflict ,
    [Description("transient")]
    Transient ,
    [Description("lock-error")]
    LockDashError ,
    [Description("no-store")]
    NoDashStore ,
    [Description("exception")]
    Exception ,
    [Description("timeout")]
    Timeout ,
    [Description("incomplete")]
    Incomplete ,
    [Description("throttled")]
    Throttled ,
    [Description("informational")]
    Informational ,
}

public enum IssueSeverityEnum {
    [Description("fatal")]
    Fatal ,
    [Description("error")]
    Error ,
    [Description("warning")]
    Warning ,
    [Description("information")]
    Information ,
}

public enum LinkTypeEnum {
    [Description("replaced-by")]
    ReplacedDashBy ,
    [Description("replaces")]
    Replaces ,
    [Description("refer")]
    Refer ,
    [Description("seealso")]
    Seealso ,
}

public enum PaymentNoticeStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum PaymentReconciliationStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum IdentityAssuranceLevelEnum {
    [Description("level1")]
    Level1 ,
    [Description("level2")]
    Level2 ,
    [Description("level3")]
    Level3 ,
    [Description("level4")]
    Level4 ,
}

public enum ActionCardinalityBehaviorEnum {
    [Description("single")]
    Single ,
    [Description("multiple")]
    Multiple ,
}

public enum ActionGroupingBehaviorEnum {
    [Description("visual-group")]
    VisualDashGroup ,
    [Description("logical-group")]
    LogicalDashGroup ,
    [Description("sentence-group")]
    SentenceDashGroup ,
}

public enum ActionPrecheckBehaviorEnum {
    [Description("yes")]
    Yes ,
    [Description("no")]
    No ,
}

public enum ActionRequiredBehaviorEnum {
    [Description("must")]
    Must ,
    [Description("could")]
    Could ,
    [Description("must-unless-documented")]
    MustDashUnlessDashDocumented ,
}

public enum ActionSelectionBehaviorEnum {
    [Description("any")]
    Any ,
    [Description("all")]
    All ,
    [Description("all-or-none")]
    AllDashOrDashNone ,
    [Description("exactly-one")]
    ExactlyDashOne ,
    [Description("at-most-one")]
    AtDashMostDashOne ,
    [Description("one-or-more")]
    OneDashOrDashMore ,
}

public enum ActionConditionKindEnum {
    [Description("applicability")]
    Applicability ,
    [Description("start")]
    Start ,
    [Description("stop")]
    Stop ,
}

public enum ActionParticipantTypeEnum {
    [Description("patient")]
    Patient ,
    [Description("practitioner")]
    Practitioner ,
    [Description("related-person")]
    RelatedDashPerson ,
    [Description("device")]
    Device ,
}

public enum ActionRelationshipTypeEnum {
    [Description("before-start")]
    BeforeDashStart ,
    [Description("before")]
    Before ,
    [Description("before-end")]
    BeforeDashEnd ,
    [Description("concurrent-with-start")]
    ConcurrentDashWithDashStart ,
    [Description("concurrent")]
    Concurrent ,
    [Description("concurrent-with-end")]
    ConcurrentDashWithDashEnd ,
    [Description("after-start")]
    AfterDashStart ,
    [Description("after")]
    After ,
    [Description("after-end")]
    AfterDashEnd ,
}

public enum ProcedureStatusEnum {
    [Description("preparation")]
    Preparation ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("not-done")]
    NotDashDone ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("stopped")]
    Stopped ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ProvenanceEntityRoleEnum {
    [Description("derivation")]
    Derivation ,
    [Description("revision")]
    Revision ,
    [Description("quotation")]
    Quotation ,
    [Description("source")]
    Source ,
    [Description("removal")]
    Removal ,
}

public enum EnableWhenBehaviorEnum {
    [Description("all")]
    All ,
    [Description("any")]
    Any ,
}

public enum QuestionnaireItemTypeEnum {
    [Description("group")]
    Group ,
    [Description("display")]
    Display ,
    [Description("question")]
    Question ,
    [Description("boolean")]
    Boolean ,
    [Description("decimal")]
    Decimal ,
    [Description("integer")]
    Integer ,
    [Description("date")]
    Date ,
    [Description("dateTime")]
    DateTime ,
    [Description("time")]
    Time ,
    [Description("string")]
    String ,
    [Description("text")]
    Text ,
    [Description("url")]
    Url ,
    [Description("choice")]
    Choice ,
    [Description("open-choice")]
    OpenDashChoice ,
    [Description("attachment")]
    Attachment ,
    [Description("reference")]
    Reference ,
    [Description("quantity")]
    Quantity ,
}

public enum QuestionnaireItemOperatorEnum {
    [Description("exists")]
    Exists ,
    [Description("=")]
    Equal ,
    [Description("!=")]
    NotEqual ,
    [Description(">")]
    Greater ,
    [Description("<")]
    Less ,
    [Description(">=")]
    GreaterOrEqual ,
    [Description("<=")]
    LessOrEqual ,
}

public enum QuestionnaireResponseStatusEnum {
    [Description("in-progress")]
    InDashProgress ,
    [Description("completed")]
    Completed ,
    [Description("amended")]
    Amended ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("stopped")]
    Stopped ,
}

public enum RequestStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum ResearchElementTypeEnum {
    [Description("population")]
    Population ,
    [Description("exposure")]
    Exposure ,
    [Description("outcome")]
    Outcome ,
}

public enum VariableTypeEnum {
    [Description("dichotomous")]
    Dichotomous ,
    [Description("continuous")]
    Continuous ,
    [Description("descriptive")]
    Descriptive ,
}

public enum ResearchStudyStatusEnum {
    [Description("active")]
    Active ,
    [Description("administratively-completed")]
    AdministrativelyDashCompleted ,
    [Description("approved")]
    Approved ,
    [Description("closed-to-accrual")]
    ClosedDashToDashAccrual ,
    [Description("closed-to-accrual-and-intervention")]
    ClosedDashToDashAccrualDashAndDashIntervention ,
    [Description("completed")]
    Completed ,
    [Description("disapproved")]
    Disapproved ,
    [Description("in-review")]
    InDashReview ,
    [Description("temporarily-closed-to-accrual")]
    TemporarilyDashClosedDashToDashAccrual ,
    [Description("temporarily-closed-to-accrual-and-intervention")]
    TemporarilyDashClosedDashToDashAccrualDashAndDashIntervention ,
    [Description("withdrawn")]
    Withdrawn ,
}

public enum ResearchSubjectStatusEnum {
    [Description("candidate")]
    Candidate ,
    [Description("eligible")]
    Eligible ,
    [Description("follow-up")]
    FollowDashUp ,
    [Description("ineligible")]
    Ineligible ,
    [Description("not-registered")]
    NotDashRegistered ,
    [Description("off-study")]
    OffDashStudy ,
    [Description("on-study")]
    OnDashStudy ,
    [Description("on-study-intervention")]
    OnDashStudyDashIntervention ,
    [Description("on-study-observation")]
    OnDashStudyDashObservation ,
    [Description("pending-on-study")]
    PendingDashOnDashStudy ,
    [Description("potential-candidate")]
    PotentialDashCandidate ,
    [Description("screening")]
    Screening ,
    [Description("withdrawn")]
    Withdrawn ,
}

public enum RiskAssessmentStatusEnum {
    [Description("registered")]
    Registered ,
    [Description("preliminary")]
    Preliminary ,
    [Description("final")]
    Final ,
    [Description("amended")]
    Amended ,
    [Description("corrected")]
    Corrected ,
    [Description("cancelled")]
    Cancelled ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum SearchComparatorEnum {
    [Description("eq")]
    Eq ,
    [Description("ne")]
    Ne ,
    [Description("gt")]
    Gt ,
    [Description("lt")]
    Lt ,
    [Description("ge")]
    Ge ,
    [Description("le")]
    Le ,
    [Description("sa")]
    Sa ,
    [Description("eb")]
    Eb ,
    [Description("ap")]
    Ap ,
}

public enum SearchModifierCodeEnum {
    [Description("missing")]
    Missing ,
    [Description("exact")]
    Exact ,
    [Description("contains")]
    Contains ,
    [Description("not")]
    Not ,
    [Description("text")]
    Text ,
    [Description("in")]
    In ,
    [Description("not-in")]
    NotDashIn ,
    [Description("below")]
    Below ,
    [Description("above")]
    Above ,
    [Description("type")]
    Type ,
    [Description("identifier")]
    Identifier ,
    [Description("ofType")]
    OfType ,
}

public enum XpathUsageTypeEnum {
    [Description("normal")]
    Normal ,
    [Description("phonetic")]
    Phonetic ,
    [Description("nearby")]
    Nearby ,
    [Description("distance")]
    Distance ,
    [Description("other")]
    Other ,
}

public enum ServiceRequestIntentEnum {
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("directive")]
    Directive ,
    [Description("order")]
    Order ,
    [Description("original-order")]
    OriginalDashOrder ,
    [Description("reflex-order")]
    ReflexDashOrder ,
    [Description("filler-order")]
    FillerDashOrder ,
    [Description("instance-order")]
    InstanceDashOrder ,
    [Description("option")]
    Option ,
}

public enum ServiceRequestPriorityEnum {
    [Description("routine")]
    Routine ,
    [Description("urgent")]
    Urgent ,
    [Description("asap")]
    Asap ,
    [Description("stat")]
    Stat ,
}

public enum ServiceRequestStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("revoked")]
    Revoked ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum SlotStatusEnum {
    [Description("busy")]
    Busy ,
    [Description("free")]
    Free ,
    [Description("busy-unavailable")]
    BusyDashUnavailable ,
    [Description("busy-tentative")]
    BusyDashTentative ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum SpecimenStatusEnum {
    [Description("available")]
    Available ,
    [Description("unavailable")]
    Unavailable ,
    [Description("unsatisfactory")]
    Unsatisfactory ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum SpecimenContainedPreferenceEnum {
    [Description("preferred")]
    Preferred ,
    [Description("alternate")]
    Alternate ,
}

public enum TypeDerivationRuleEnum {
    [Description("specialization")]
    Specialization ,
    [Description("constraint")]
    Constraint ,
}

public enum StructureDefinitionKindEnum {
    [Description("primitive-type")]
    PrimitiveDashType ,
    [Description("complex-type")]
    ComplexDashType ,
    [Description("resource")]
    Resource ,
    [Description("logical")]
    Logical ,
}

public enum ExtensionContextTypeEnum {
    [Description("fhirpath")]
    Fhirpath ,
    [Description("element")]
    Element ,
    [Description("extension")]
    Extension ,
}

public enum StructureMapGroupTypeModeEnum {
    [Description("none")]
    None ,
    [Description("types")]
    Types ,
    [Description("type-and-types")]
    TypeDashAndDashTypes ,
}

public enum StructureMapInputModeEnum {
    [Description("source")]
    Source ,
    [Description("target")]
    Target ,
}

public enum StructureMapSourceListModeEnum {
    [Description("first")]
    First ,
    [Description("not_first")]
    Not_first ,
    [Description("last")]
    Last ,
    [Description("not_last")]
    Not_last ,
    [Description("only_one")]
    Only_one ,
}

public enum StructureMapContextTypeEnum {
    [Description("type")]
    Type ,
    [Description("variable")]
    Variable ,
}

public enum StructureMapTargetListModeEnum {
    [Description("first")]
    First ,
    [Description("share")]
    Share ,
    [Description("last")]
    Last ,
    [Description("collate")]
    Collate ,
}

public enum StructureMapTransformEnum {
    [Description("create")]
    Create ,
    [Description("copy")]
    Copy ,
    [Description("truncate")]
    Truncate ,
    [Description("escape")]
    Escape ,
    [Description("cast")]
    Cast ,
    [Description("append")]
    Append ,
    [Description("translate")]
    Translate ,
    [Description("reference")]
    Reference ,
    [Description("dateOp")]
    DateOp ,
    [Description("uuid")]
    Uuid ,
    [Description("pointer")]
    Pointer ,
    [Description("evaluate")]
    Evaluate ,
    [Description("cc")]
    Cc ,
    [Description("c")]
    C ,
    [Description("qty")]
    Qty ,
    [Description("id")]
    Id ,
    [Description("cp")]
    Cp ,
}

public enum StructureMapModelModeEnum {
    [Description("source")]
    Source ,
    [Description("queried")]
    Queried ,
    [Description("target")]
    Target ,
    [Description("produced")]
    Produced ,
}

public enum SubscriptionStatusEnum {
    [Description("requested")]
    Requested ,
    [Description("active")]
    Active ,
    [Description("error")]
    Error ,
    [Description("off")]
    Off ,
}

public enum SubscriptionChannelTypeEnum {
    [Description("rest-hook")]
    RestDashHook ,
    [Description("websocket")]
    Websocket ,
    [Description("email")]
    Email ,
    [Description("sms")]
    Sms ,
    [Description("message")]
    Message ,
}

public enum FhirsubstanceStatusEnum {
    [Description("active")]
    Active ,
    [Description("inactive")]
    Inactive ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum SupplyDeliveryStatusEnum {
    [Description("in-progress")]
    InDashProgress ,
    [Description("completed")]
    Completed ,
    [Description("abandoned")]
    Abandoned ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum SupplyRequestStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("active")]
    Active ,
    [Description("suspended")]
    Suspended ,
    [Description("cancelled")]
    Cancelled ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
    [Description("unknown")]
    Unknown ,
}

public enum TaskIntentEnum {
    [Description("unknown")]
    Unknown ,
    [Description("proposal")]
    Proposal ,
    [Description("plan")]
    Plan ,
    [Description("order")]
    Order ,
    [Description("original-order")]
    OriginalDashOrder ,
    [Description("reflex-order")]
    ReflexDashOrder ,
    [Description("filler-order")]
    FillerDashOrder ,
    [Description("instance-order")]
    InstanceDashOrder ,
    [Description("option")]
    Option ,
}

public enum TaskPriorityEnum {
    [Description("routine")]
    Routine ,
    [Description("urgent")]
    Urgent ,
    [Description("asap")]
    Asap ,
    [Description("stat")]
    Stat ,
}

public enum TaskStatusEnum {
    [Description("draft")]
    Draft ,
    [Description("requested")]
    Requested ,
    [Description("received")]
    Received ,
    [Description("accepted")]
    Accepted ,
    [Description("rejected")]
    Rejected ,
    [Description("ready")]
    Ready ,
    [Description("cancelled")]
    Cancelled ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("on-hold")]
    OnDashHold ,
    [Description("failed")]
    Failed ,
    [Description("completed")]
    Completed ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum CodeSearchSupportEnum {
    [Description("explicit")]
    Explicit ,
    [Description("all")]
    All ,
}

public enum TestReportResultEnum {
    [Description("pass")]
    Pass ,
    [Description("fail")]
    Fail ,
    [Description("pending")]
    Pending ,
}

public enum TestReportStatusEnum {
    [Description("completed")]
    Completed ,
    [Description("in-progress")]
    InDashProgress ,
    [Description("waiting")]
    Waiting ,
    [Description("stopped")]
    Stopped ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum TestReportParticipantTypeEnum {
    [Description("test-engine")]
    TestDashEngine ,
    [Description("client")]
    Client ,
    [Description("server")]
    Server ,
}

public enum TestReportActionResultEnum {
    [Description("pass")]
    Pass ,
    [Description("skip")]
    Skip ,
    [Description("fail")]
    Fail ,
    [Description("warning")]
    Warning ,
    [Description("error")]
    Error ,
}

public enum AssertionDirectionTypeEnum {
    [Description("response")]
    Response ,
    [Description("request")]
    Request ,
}

public enum AssertionOperatorTypeEnum {
    [Description("equals")]
    Equals ,
    [Description("notEquals")]
    NotEquals ,
    [Description("in")]
    In ,
    [Description("notIn")]
    NotIn ,
    [Description("greaterThan")]
    GreaterThan ,
    [Description("lessThan")]
    LessThan ,
    [Description("empty")]
    Empty ,
    [Description("notEmpty")]
    NotEmpty ,
    [Description("contains")]
    Contains ,
    [Description("notContains")]
    NotContains ,
    [Description("eval")]
    Eval ,
}

public enum TestScriptRequestMethodCodeEnum {
    [Description("delete")]
    Delete ,
    [Description("get")]
    Get ,
    [Description("options")]
    Options ,
    [Description("patch")]
    Patch ,
    [Description("post")]
    Post ,
    [Description("put")]
    Put ,
    [Description("head")]
    Head ,
}

public enum AssertionResponseTypesEnum {
    [Description("okay")]
    Okay ,
    [Description("created")]
    Created ,
    [Description("noContent")]
    NoContent ,
    [Description("notModified")]
    NotModified ,
    [Description("bad")]
    Bad ,
    [Description("forbidden")]
    Forbidden ,
    [Description("notFound")]
    NotFound ,
    [Description("methodNotAllowed")]
    MethodNotAllowed ,
    [Description("conflict")]
    Conflict ,
    [Description("gone")]
    Gone ,
    [Description("preconditionFailed")]
    PreconditionFailed ,
    [Description("unprocessable")]
    Unprocessable ,
}

public enum StatusEnum {
    [Description("attested")]
    Attested ,
    [Description("validated")]
    Validated ,
    [Description("in-process")]
    InDashProcess ,
    [Description("req-revalid")]
    ReqDashRevalid ,
    [Description("val-fail")]
    ValDashFail ,
    [Description("reval-fail")]
    RevalDashFail ,
}

public enum VisionStatusEnum {
    [Description("active")]
    Active ,
    [Description("cancelled")]
    Cancelled ,
    [Description("draft")]
    Draft ,
    [Description("entered-in-error")]
    EnteredDashInDashError ,
}

public enum VisionEyesEnum {
    [Description("right")]
    Right ,
    [Description("left")]
    Left ,
}

public enum VisionBaseEnum {
    [Description("up")]
    Up ,
    [Description("down")]
    Down ,
    [Description("in")]
    In ,
    [Description("out")]
    Out ,
}

