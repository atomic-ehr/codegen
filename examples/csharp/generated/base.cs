// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.


namespace SuperNameSpace;
public class Address : Element {
    public  string? City { get; set; }
    public  string? Country { get; set; }
    public  string? District { get; set; }
    public  string[]? Line { get; set; }
    public  Period? Period { get; set; }
    public  string? PostalCode { get; set; }
    public  string? State { get; set; }
    public  string? Text { get; set; }
    public  AddressTypeEnum? Type { get; set; }
    public  AddressUseEnum? Use { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Age : Quantity {

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Annotation : Element {
    public  ResourceReference? AuthorReference { get; set; }
    public  string? AuthorString { get; set; }
    public required string Text { get; set; }
    public  string? Time { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Attachment : Element {
    public  string? ContentType { get; set; }
    public  string? Creation { get; set; }
    public  string? Data { get; set; }
    public  string? Hash { get; set; }
    public  string? Language { get; set; }
    public  long? Size { get; set; }
    public  string? Title { get; set; }
    public  string? Url { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class BackboneElement : Element {
    public  Extension[]? ModifierExtension { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class CodeableConcept : Element {
    public  Coding[]? Coding { get; set; }
    public  string? Text { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Coding : Element {
    public  string? Code { get; set; }
    public  string? Display { get; set; }
    public  string? System { get; set; }
    public  bool? UserSelected { get; set; }
    public  string? Version { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ContactDetail : Element {
    public  string? Name { get; set; }
    public  ContactPoint[]? Telecom { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ContactPoint : Element {
    public  Period? Period { get; set; }
    public  long? Rank { get; set; }
    public  ContactPointSystemEnum? System { get; set; }
    public  ContactPointUseEnum? Use { get; set; }
    public  string? Value { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Contributor : Element {
    public  ContactDetail[]? Contact { get; set; }
    public required string Name { get; set; }
    public required ContributorTypeEnum Type { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Count : Quantity {

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class DataRequirement : Element {
    public  Element[]? CodeFilter { get; set; }
    public  Element[]? DateFilter { get; set; }
    public  long? Limit { get; set; }
    public  string[]? MustSupport { get; set; }
    public  string[]? Profile { get; set; }
    public  Element[]? Sort { get; set; }
    public  CodeableConcept? SubjectCodeableConcept { get; set; }
    public  ResourceReference? SubjectReference { get; set; }
    public required string Type { get; set; }

    public class DataRequirementCodeFilter : Element {
        public  Coding[]? Code { get; set; }
        public  string? Path { get; set; }
        public  string? SearchParam { get; set; }
        public  string? ValueSet { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class DataRequirementDateFilter : Element {
        public  string? Path { get; set; }
        public  string? SearchParam { get; set; }
        public  string? ValueDateTime { get; set; }
        public  Duration? ValueDuration { get; set; }
        public  Period? ValuePeriod { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class DataRequirementSort : Element {
        public required SortDirectionEnum Direction { get; set; }
        public required string Path { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Distance : Quantity {

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Dosage : BackboneElement {
    public  CodeableConcept[]? AdditionalInstruction { get; set; }
    public  bool? AsNeededBoolean { get; set; }
    public  CodeableConcept? AsNeededCodeableConcept { get; set; }
    public  Element[]? DoseAndRate { get; set; }
    public  Quantity? MaxDosePerAdministration { get; set; }
    public  Quantity? MaxDosePerLifetime { get; set; }
    public  Ratio? MaxDosePerPeriod { get; set; }
    public  CodeableConcept? Method { get; set; }
    public  string? PatientInstruction { get; set; }
    public  CodeableConcept? Route { get; set; }
    public  int? Sequence { get; set; }
    public  CodeableConcept? Site { get; set; }
    public  string? Text { get; set; }
    public  Timing? Timing { get; set; }

    public class DosageDoseAndRate : Element {
        public  Quantity? DoseQuantity { get; set; }
        public  Range? DoseRange { get; set; }
        public  Quantity? RateQuantity { get; set; }
        public  Range? RateRange { get; set; }
        public  Ratio? RateRatio { get; set; }
        public  CodeableConcept? Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Duration : Quantity {

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Element {
    public  Extension[]? Extension { get; set; }
    public  string? Id { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ElementDefinition : BackboneElement {
    public  string[]? Alias { get; set; }
    public  Element? Base { get; set; }
    public  Element? Binding { get; set; }
    public  Coding[]? Code { get; set; }
    public  string? Comment { get; set; }
    public  string[]? Condition { get; set; }
    public  Element[]? Constraint { get; set; }
    public  string? ContentReference { get; set; }
    public  Address? DefaultValueAddress { get; set; }
    public  Age? DefaultValueAge { get; set; }
    public  Annotation? DefaultValueAnnotation { get; set; }
    public  Attachment? DefaultValueAttachment { get; set; }
    public  string? DefaultValueBase64binary { get; set; }
    public  bool? DefaultValueBoolean { get; set; }
    public  string? DefaultValueCanonical { get; set; }
    public  string? DefaultValueCode { get; set; }
    public  CodeableConcept? DefaultValueCodeableConcept { get; set; }
    public  Coding? DefaultValueCoding { get; set; }
    public  ContactDetail? DefaultValueContactDetail { get; set; }
    public  ContactPoint? DefaultValueContactPoint { get; set; }
    public  Contributor? DefaultValueContributor { get; set; }
    public  Count? DefaultValueCount { get; set; }
    public  DataRequirement? DefaultValueDataRequirement { get; set; }
    public  string? DefaultValueDate { get; set; }
    public  string? DefaultValueDateTime { get; set; }
    public  decimal? DefaultValueDecimal { get; set; }
    public  Distance? DefaultValueDistance { get; set; }
    public  Dosage? DefaultValueDosage { get; set; }
    public  Duration? DefaultValueDuration { get; set; }
    public  ResourceExpression? DefaultValueExpression { get; set; }
    public  HumanName? DefaultValueHumanName { get; set; }
    public  string? DefaultValueId { get; set; }
    public  Identifier? DefaultValueIdentifier { get; set; }
    public  string? DefaultValueInstant { get; set; }
    public  int? DefaultValueInteger { get; set; }
    public  string? DefaultValueMarkdown { get; set; }
    public  Meta? DefaultValueMeta { get; set; }
    public  Money? DefaultValueMoney { get; set; }
    public  string? DefaultValueOid { get; set; }
    public  ParameterDefinition? DefaultValueParameterDefinition { get; set; }
    public  Period? DefaultValuePeriod { get; set; }
    public  long? DefaultValuePositiveInt { get; set; }
    public  Quantity? DefaultValueQuantity { get; set; }
    public  Range? DefaultValueRange { get; set; }
    public  Ratio? DefaultValueRatio { get; set; }
    public  ResourceReference? DefaultValueReference { get; set; }
    public  RelatedArtifact? DefaultValueRelatedArtifact { get; set; }
    public  SampledData? DefaultValueSampledData { get; set; }
    public  Signature? DefaultValueSignature { get; set; }
    public  string? DefaultValueString { get; set; }
    public  string? DefaultValueTime { get; set; }
    public  Timing? DefaultValueTiming { get; set; }
    public  TriggerDefinition? DefaultValueTriggerDefinition { get; set; }
    public  long? DefaultValueUnsignedInt { get; set; }
    public  string? DefaultValueUri { get; set; }
    public  string? DefaultValueUrl { get; set; }
    public  UsageContext? DefaultValueUsageContext { get; set; }
    public  string? DefaultValueUuid { get; set; }
    public  string? Definition { get; set; }
    public  Element[]? Example { get; set; }
    public  Address? FixedAddress { get; set; }
    public  Age? FixedAge { get; set; }
    public  Annotation? FixedAnnotation { get; set; }
    public  Attachment? FixedAttachment { get; set; }
    public  string? FixedBase64binary { get; set; }
    public  bool? FixedBoolean { get; set; }
    public  string? FixedCanonical { get; set; }
    public  string? FixedCode { get; set; }
    public  CodeableConcept? FixedCodeableConcept { get; set; }
    public  Coding? FixedCoding { get; set; }
    public  ContactDetail? FixedContactDetail { get; set; }
    public  ContactPoint? FixedContactPoint { get; set; }
    public  Contributor? FixedContributor { get; set; }
    public  Count? FixedCount { get; set; }
    public  DataRequirement? FixedDataRequirement { get; set; }
    public  string? FixedDate { get; set; }
    public  string? FixedDateTime { get; set; }
    public  decimal? FixedDecimal { get; set; }
    public  Distance? FixedDistance { get; set; }
    public  Dosage? FixedDosage { get; set; }
    public  Duration? FixedDuration { get; set; }
    public  ResourceExpression? FixedExpression { get; set; }
    public  HumanName? FixedHumanName { get; set; }
    public  string? FixedId { get; set; }
    public  Identifier? FixedIdentifier { get; set; }
    public  string? FixedInstant { get; set; }
    public  int? FixedInteger { get; set; }
    public  string? FixedMarkdown { get; set; }
    public  Meta? FixedMeta { get; set; }
    public  Money? FixedMoney { get; set; }
    public  string? FixedOid { get; set; }
    public  ParameterDefinition? FixedParameterDefinition { get; set; }
    public  Period? FixedPeriod { get; set; }
    public  long? FixedPositiveInt { get; set; }
    public  Quantity? FixedQuantity { get; set; }
    public  Range? FixedRange { get; set; }
    public  Ratio? FixedRatio { get; set; }
    public  ResourceReference? FixedReference { get; set; }
    public  RelatedArtifact? FixedRelatedArtifact { get; set; }
    public  SampledData? FixedSampledData { get; set; }
    public  Signature? FixedSignature { get; set; }
    public  string? FixedString { get; set; }
    public  string? FixedTime { get; set; }
    public  Timing? FixedTiming { get; set; }
    public  TriggerDefinition? FixedTriggerDefinition { get; set; }
    public  long? FixedUnsignedInt { get; set; }
    public  string? FixedUri { get; set; }
    public  string? FixedUrl { get; set; }
    public  UsageContext? FixedUsageContext { get; set; }
    public  string? FixedUuid { get; set; }
    public  bool? IsModifier { get; set; }
    public  string? IsModifierReason { get; set; }
    public  bool? IsSummary { get; set; }
    public  string? Label { get; set; }
    public  Element[]? Mapping { get; set; }
    public  string? Max { get; set; }
    public  int? MaxLength { get; set; }
    public  string? MaxValueDate { get; set; }
    public  string? MaxValueDateTime { get; set; }
    public  decimal? MaxValueDecimal { get; set; }
    public  string? MaxValueInstant { get; set; }
    public  int? MaxValueInteger { get; set; }
    public  long? MaxValuePositiveInt { get; set; }
    public  Quantity? MaxValueQuantity { get; set; }
    public  string? MaxValueTime { get; set; }
    public  long? MaxValueUnsignedInt { get; set; }
    public  string? MeaningWhenMissing { get; set; }
    public  long? Min { get; set; }
    public  string? MinValueDate { get; set; }
    public  string? MinValueDateTime { get; set; }
    public  decimal? MinValueDecimal { get; set; }
    public  string? MinValueInstant { get; set; }
    public  int? MinValueInteger { get; set; }
    public  long? MinValuePositiveInt { get; set; }
    public  Quantity? MinValueQuantity { get; set; }
    public  string? MinValueTime { get; set; }
    public  long? MinValueUnsignedInt { get; set; }
    public  bool? MustSupport { get; set; }
    public  string? OrderMeaning { get; set; }
    public required string Path { get; set; }
    public  Address? PatternAddress { get; set; }
    public  Age? PatternAge { get; set; }
    public  Annotation? PatternAnnotation { get; set; }
    public  Attachment? PatternAttachment { get; set; }
    public  string? PatternBase64binary { get; set; }
    public  bool? PatternBoolean { get; set; }
    public  string? PatternCanonical { get; set; }
    public  string? PatternCode { get; set; }
    public  CodeableConcept? PatternCodeableConcept { get; set; }
    public  Coding? PatternCoding { get; set; }
    public  ContactDetail? PatternContactDetail { get; set; }
    public  ContactPoint? PatternContactPoint { get; set; }
    public  Contributor? PatternContributor { get; set; }
    public  Count? PatternCount { get; set; }
    public  DataRequirement? PatternDataRequirement { get; set; }
    public  string? PatternDate { get; set; }
    public  string? PatternDateTime { get; set; }
    public  decimal? PatternDecimal { get; set; }
    public  Distance? PatternDistance { get; set; }
    public  Dosage? PatternDosage { get; set; }
    public  Duration? PatternDuration { get; set; }
    public  ResourceExpression? PatternExpression { get; set; }
    public  HumanName? PatternHumanName { get; set; }
    public  string? PatternId { get; set; }
    public  Identifier? PatternIdentifier { get; set; }
    public  string? PatternInstant { get; set; }
    public  int? PatternInteger { get; set; }
    public  string? PatternMarkdown { get; set; }
    public  Meta? PatternMeta { get; set; }
    public  Money? PatternMoney { get; set; }
    public  string? PatternOid { get; set; }
    public  ParameterDefinition? PatternParameterDefinition { get; set; }
    public  Period? PatternPeriod { get; set; }
    public  long? PatternPositiveInt { get; set; }
    public  Quantity? PatternQuantity { get; set; }
    public  Range? PatternRange { get; set; }
    public  Ratio? PatternRatio { get; set; }
    public  ResourceReference? PatternReference { get; set; }
    public  RelatedArtifact? PatternRelatedArtifact { get; set; }
    public  SampledData? PatternSampledData { get; set; }
    public  Signature? PatternSignature { get; set; }
    public  string? PatternString { get; set; }
    public  string? PatternTime { get; set; }
    public  Timing? PatternTiming { get; set; }
    public  TriggerDefinition? PatternTriggerDefinition { get; set; }
    public  long? PatternUnsignedInt { get; set; }
    public  string? PatternUri { get; set; }
    public  string? PatternUrl { get; set; }
    public  UsageContext? PatternUsageContext { get; set; }
    public  string? PatternUuid { get; set; }
    public  PropertyRepresentationEnum[]? Representation { get; set; }
    public  string? Requirements { get; set; }
    public  string? Short { get; set; }
    public  bool? SliceIsConstraining { get; set; }
    public  string? SliceName { get; set; }
    public  Element? Slicing { get; set; }
    public  Element[]? Type { get; set; }

    public class ElementDefinitionBase : Element {
        public required string Max { get; set; }
        public required long Min { get; set; }
        public required string Path { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionBinding : Element {
        public  string? Description { get; set; }
        public required BindingStrengthEnum Strength { get; set; }
        public  string? ValueSet { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionConstraint : Element {
        public  string? Expression { get; set; }
        public required string Human { get; set; }
        public required string Key { get; set; }
        public  string? Requirements { get; set; }
        public required ConstraintSeverityEnum Severity { get; set; }
        public  string? Source { get; set; }
        public  string? Xpath { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionExample : Element {
        public required string Label { get; set; }
        public  Address? ValueAddress { get; set; }
        public  Age? ValueAge { get; set; }
        public  Annotation? ValueAnnotation { get; set; }
        public  Attachment? ValueAttachment { get; set; }
        public  string? ValueBase64binary { get; set; }
        public  bool? ValueBoolean { get; set; }
        public  string? ValueCanonical { get; set; }
        public  string? ValueCode { get; set; }
        public  CodeableConcept? ValueCodeableConcept { get; set; }
        public  Coding? ValueCoding { get; set; }
        public  ContactDetail? ValueContactDetail { get; set; }
        public  ContactPoint? ValueContactPoint { get; set; }
        public  Contributor? ValueContributor { get; set; }
        public  Count? ValueCount { get; set; }
        public  DataRequirement? ValueDataRequirement { get; set; }
        public  string? ValueDate { get; set; }
        public  string? ValueDateTime { get; set; }
        public  decimal? ValueDecimal { get; set; }
        public  Distance? ValueDistance { get; set; }
        public  Dosage? ValueDosage { get; set; }
        public  Duration? ValueDuration { get; set; }
        public  ResourceExpression? ValueExpression { get; set; }
        public  HumanName? ValueHumanName { get; set; }
        public  string? ValueId { get; set; }
        public  Identifier? ValueIdentifier { get; set; }
        public  string? ValueInstant { get; set; }
        public  int? ValueInteger { get; set; }
        public  string? ValueMarkdown { get; set; }
        public  Meta? ValueMeta { get; set; }
        public  Money? ValueMoney { get; set; }
        public  string? ValueOid { get; set; }
        public  ParameterDefinition? ValueParameterDefinition { get; set; }
        public  Period? ValuePeriod { get; set; }
        public  long? ValuePositiveInt { get; set; }
        public  Quantity? ValueQuantity { get; set; }
        public  Range? ValueRange { get; set; }
        public  Ratio? ValueRatio { get; set; }
        public  ResourceReference? ValueReference { get; set; }
        public  RelatedArtifact? ValueRelatedArtifact { get; set; }
        public  SampledData? ValueSampledData { get; set; }
        public  Signature? ValueSignature { get; set; }
        public  string? ValueString { get; set; }
        public  string? ValueTime { get; set; }
        public  Timing? ValueTiming { get; set; }
        public  TriggerDefinition? ValueTriggerDefinition { get; set; }
        public  long? ValueUnsignedInt { get; set; }
        public  string? ValueUri { get; set; }
        public  string? ValueUrl { get; set; }
        public  UsageContext? ValueUsageContext { get; set; }
        public  string? ValueUuid { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionMapping : Element {
        public  string? Comment { get; set; }
        public required string Identity { get; set; }
        public  string? Language { get; set; }
        public required string Map { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionSlicing : Element {
        public  string? Description { get; set; }
        public  Element[]? Discriminator { get; set; }
        public  bool? Ordered { get; set; }
        public required SlicingRulesEnum Rules { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionSlicingDiscriminator : Element {
        public required string Path { get; set; }
        public required DiscriminatorTypeEnum Type { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }

    public class ElementDefinitionType : Element {
        public  AggregationModeEnum[]? Aggregation { get; set; }
        public required string Code { get; set; }
        public  string[]? Profile { get; set; }
        public  string[]? TargetProfile { get; set; }
        public  ReferenceVersionRulesEnum? Versioning { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ResourceExpression : Element {
    public  string? Description { get; set; }
    public  string? Expression { get; set; }
    public required string Language { get; set; }
    public  string? Name { get; set; }
    public  string? Reference { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Extension : Element {
    public required string Url { get; set; }
    public  Address? ValueAddress { get; set; }
    public  Age? ValueAge { get; set; }
    public  Annotation? ValueAnnotation { get; set; }
    public  Attachment? ValueAttachment { get; set; }
    public  string? ValueBase64binary { get; set; }
    public  bool? ValueBoolean { get; set; }
    public  string? ValueCanonical { get; set; }
    public  string? ValueCode { get; set; }
    public  CodeableConcept? ValueCodeableConcept { get; set; }
    public  Coding? ValueCoding { get; set; }
    public  ContactDetail? ValueContactDetail { get; set; }
    public  ContactPoint? ValueContactPoint { get; set; }
    public  Contributor? ValueContributor { get; set; }
    public  Count? ValueCount { get; set; }
    public  DataRequirement? ValueDataRequirement { get; set; }
    public  string? ValueDate { get; set; }
    public  string? ValueDateTime { get; set; }
    public  decimal? ValueDecimal { get; set; }
    public  Distance? ValueDistance { get; set; }
    public  Dosage? ValueDosage { get; set; }
    public  Duration? ValueDuration { get; set; }
    public  ResourceExpression? ValueExpression { get; set; }
    public  HumanName? ValueHumanName { get; set; }
    public  string? ValueId { get; set; }
    public  Identifier? ValueIdentifier { get; set; }
    public  string? ValueInstant { get; set; }
    public  int? ValueInteger { get; set; }
    public  string? ValueMarkdown { get; set; }
    public  Meta? ValueMeta { get; set; }
    public  Money? ValueMoney { get; set; }
    public  string? ValueOid { get; set; }
    public  ParameterDefinition? ValueParameterDefinition { get; set; }
    public  Period? ValuePeriod { get; set; }
    public  long? ValuePositiveInt { get; set; }
    public  Quantity? ValueQuantity { get; set; }
    public  Range? ValueRange { get; set; }
    public  Ratio? ValueRatio { get; set; }
    public  ResourceReference? ValueReference { get; set; }
    public  RelatedArtifact? ValueRelatedArtifact { get; set; }
    public  SampledData? ValueSampledData { get; set; }
    public  Signature? ValueSignature { get; set; }
    public  string? ValueString { get; set; }
    public  string? ValueTime { get; set; }
    public  Timing? ValueTiming { get; set; }
    public  TriggerDefinition? ValueTriggerDefinition { get; set; }
    public  long? ValueUnsignedInt { get; set; }
    public  string? ValueUri { get; set; }
    public  string? ValueUrl { get; set; }
    public  UsageContext? ValueUsageContext { get; set; }
    public  string? ValueUuid { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class HumanName : Element {
    public  string? Family { get; set; }
    public  string[]? Given { get; set; }
    public  Period? Period { get; set; }
    public  string[]? Prefix { get; set; }
    public  string[]? Suffix { get; set; }
    public  string? Text { get; set; }
    public  NameUseEnum? Use { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Identifier : Element {
    public  ResourceReference? Assigner { get; set; }
    public  Period? Period { get; set; }
    public  string? System { get; set; }
    public  CodeableConcept? Type { get; set; }
    public  IdentifierUseEnum? Use { get; set; }
    public  string? Value { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class MarketingStatus : BackboneElement {
    public required CodeableConcept Country { get; set; }
    public required Period DateRange { get; set; }
    public  CodeableConcept? Jurisdiction { get; set; }
    public  string? RestoreDate { get; set; }
    public required CodeableConcept Status { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Meta : Element {
    public  string? LastUpdated { get; set; }
    public  string[]? Profile { get; set; }
    public  Coding[]? Security { get; set; }
    public  string? Source { get; set; }
    public  Coding[]? Tag { get; set; }
    public  string? VersionId { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Money : Element {
    public  string? Currency { get; set; }
    public  decimal? Value { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Narrative : Element {
    public required string Div { get; set; }
    public required NarrativeStatusEnum Status { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ParameterDefinition : Element {
    public  string? Documentation { get; set; }
    public  string? Max { get; set; }
    public  int? Min { get; set; }
    public  string? Name { get; set; }
    public  string? Profile { get; set; }
    public required string Type { get; set; }
    public required ParameterUseEnum Use { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Period : Element {
    public  string? End { get; set; }
    public  string? Start { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Population : BackboneElement {
    public  CodeableConcept? AgeCodeableConcept { get; set; }
    public  Range? AgeRange { get; set; }
    public  CodeableConcept? Gender { get; set; }
    public  CodeableConcept? PhysiologicalCondition { get; set; }
    public  CodeableConcept? Race { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ProdCharacteristic : BackboneElement {
    public  string[]? Color { get; set; }
    public  Quantity? Depth { get; set; }
    public  Quantity? ExternalDiameter { get; set; }
    public  Quantity? Height { get; set; }
    public  Attachment[]? Image { get; set; }
    public  string[]? Imprint { get; set; }
    public  Quantity? NominalVolume { get; set; }
    public  CodeableConcept? Scoring { get; set; }
    public  string? Shape { get; set; }
    public  Quantity? Weight { get; set; }
    public  Quantity? Width { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ProductShelfLife : BackboneElement {
    public  Identifier? Identifier { get; set; }
    public required Quantity Period { get; set; }
    public  CodeableConcept[]? SpecialPrecautionsForStorage { get; set; }
    public required CodeableConcept Type { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Quantity : Element {
    public  string? Code { get; set; }
    public  QuantityComparatorEnum? Comparator { get; set; }
    public  string? System { get; set; }
    public  string? Unit { get; set; }
    public  decimal? Value { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Range : Element {
    public  Quantity? High { get; set; }
    public  Quantity? Low { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Ratio : Element {
    public  Quantity? Denominator { get; set; }
    public  Quantity? Numerator { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class ResourceReference : Element {
    public  string? Display { get; set; }
    public  Identifier? Identifier { get; set; }
    public  string? Reference { get; set; }
    public  string? Type { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class RelatedArtifact : Element {
    public  string? Citation { get; set; }
    public  string? Display { get; set; }
    public  Attachment? Document { get; set; }
    public  string? Label { get; set; }
    public  string? Resource { get; set; }
    public required RelatedArtifactTypeEnum Type { get; set; }
    public  string? Url { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class SampledData : Element {
    public  string? Data { get; set; }
    public required long Dimensions { get; set; }
    public  decimal? Factor { get; set; }
    public  decimal? LowerLimit { get; set; }
    public required Quantity Origin { get; set; }
    public required decimal Period { get; set; }
    public  decimal? UpperLimit { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Signature : Element {
    public  string? Data { get; set; }
    public  ResourceReference? OnBehalfOf { get; set; }
    public  string? SigFormat { get; set; }
    public  string? TargetFormat { get; set; }
    public required Coding[] Type { get; set; }
    public required string When { get; set; }
    public required ResourceReference Who { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class SubstanceAmount : BackboneElement {
    public  Quantity? AmountQuantity { get; set; }
    public  Range? AmountRange { get; set; }
    public  string? AmountString { get; set; }
    public  string? AmountText { get; set; }
    public  CodeableConcept? AmountType { get; set; }
    public  Element? ReferenceRange { get; set; }

    public class SubstanceAmountReferenceRange : Element {
        public  Quantity? HighLimit { get; set; }
        public  Quantity? LowLimit { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class Timing : BackboneElement {
    public  CodeableConcept? Code { get; set; }
    public  string[]? Event { get; set; }
    public  Element? Repeat { get; set; }

    public class TimingRepeat : Element {
        public  Duration? BoundsDuration { get; set; }
        public  Period? BoundsPeriod { get; set; }
        public  Range? BoundsRange { get; set; }
        public  long? Count { get; set; }
        public  long? CountMax { get; set; }
        public  DayOfWeekEnum[]? DayOfWeek { get; set; }
        public  decimal? Duration { get; set; }
        public  decimal? DurationMax { get; set; }
        public  UnitsOfTimeEnum? DurationUnit { get; set; }
        public  long? Frequency { get; set; }
        public  long? FrequencyMax { get; set; }
        public  long? Offset { get; set; }
        public  decimal? Period { get; set; }
        public  decimal? PeriodMax { get; set; }
        public  UnitsOfTimeEnum? PeriodUnit { get; set; }
        public  string[]? TimeOfDay { get; set; }
        public  EventTimingEnum[]? When { get; set; }

        public override string ToString() => 
            JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

    }


    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class TriggerDefinition : Element {
    public  ResourceExpression? Condition { get; set; }
    public  DataRequirement[]? Data { get; set; }
    public  string? Name { get; set; }
    public  string? TimingDate { get; set; }
    public  string? TimingDateTime { get; set; }
    public  ResourceReference? TimingReference { get; set; }
    public  Timing? TimingTiming { get; set; }
    public required TriggerTypeEnum Type { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

public class UsageContext : Element {
    public required Coding Code { get; set; }
    public  CodeableConcept? ValueCodeableConcept { get; set; }
    public  Quantity? ValueQuantity { get; set; }
    public  Range? ValueRange { get; set; }
    public  ResourceReference? ValueReference { get; set; }

    public override string ToString() => 
        JsonSerializer.Serialize(this, Config.JsonSerializerOptions);

}

