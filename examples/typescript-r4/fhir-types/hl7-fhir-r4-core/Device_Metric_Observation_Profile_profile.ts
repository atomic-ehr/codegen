// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Annotation } from "../hl7-fhir-r4-core/Annotation";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Observation } from "../hl7-fhir-r4-core/Observation";
import type { ObservationReferenceRange } from "../hl7-fhir-r4-core/Observation";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Range } from "../hl7-fhir-r4-core/Range";
import type { Ratio } from "../hl7-fhir-r4-core/Ratio";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { SampledData } from "../hl7-fhir-r4-core/SampledData";

// CanonicalURL: http://hl7.org/fhir/StructureDefinition/devicemetricobservation
export interface Device_Metric_Observation_Profile {
    __profileUrl: "http://hl7.org/fhir/StructureDefinition/devicemetricobservation";

    identifier?: Identifier[];
    status: 'registered' | 'preliminary' | 'final' | 'amended' | 'corrected' | 'cancelled' | 'entered-in-error' | 'unknown';
    code: CodeableConcept;
    subject: Reference<'Device' | 'Patient'>;
    encounter?: Reference<'Encounter'>;
    effectiveDateTime: string;
    issued?: string;
    valueQuantity?: Quantity;
    valueCodeableConcept?: CodeableConcept;
    valueString?: string;
    valueRange?: Range;
    valueRatio?: Ratio;
    valueSampledData?: SampledData;
    valueTime?: string;
    valueDateTime?: string;
    valuePeriod?: Period;
    dataAbsentReason?: CodeableConcept;
    interpretation?: CodeableConcept[];
    note?: Annotation[];
    bodySite?: CodeableConcept;
    method?: CodeableConcept;
    specimen?: Reference<'Specimen'>;
    device: Reference<'DeviceMetric'>;
    referenceRange?: ObservationReferenceRange[];
    hasMember?: Reference<'Observation'>[];
    derivedFrom?: Reference<'Observation'>[];
}

export const attach_Device_Metric_Observation_Profile_to_Observation = (resource: Observation, profile: Device_Metric_Observation_Profile): Observation => {
    return {
        ...resource,
        meta: {
            profile: ['http://hl7.org/fhir/StructureDefinition/devicemetricobservation']
        },
        identifier: profile.identifier,
        status: profile.status,
        code: profile.code,
        subject: profile.subject,
        encounter: profile.encounter,
        effectiveDateTime: profile.effectiveDateTime,
        issued: profile.issued,
        valueQuantity: profile.valueQuantity,
        valueCodeableConcept: profile.valueCodeableConcept,
        valueString: profile.valueString,
        valueRange: profile.valueRange,
        valueRatio: profile.valueRatio,
        valueSampledData: profile.valueSampledData,
        valueTime: profile.valueTime,
        valueDateTime: profile.valueDateTime,
        valuePeriod: profile.valuePeriod,
        dataAbsentReason: profile.dataAbsentReason,
        interpretation: profile.interpretation,
        note: profile.note,
        bodySite: profile.bodySite,
        method: profile.method,
        specimen: profile.specimen,
        device: profile.device,
        referenceRange: profile.referenceRange,
        hasMember: profile.hasMember,
        derivedFrom: profile.derivedFrom,
    }
}

export const extract_Device_Metric_Observation_Profile_from_Observation = (resource: Observation): Device_Metric_Observation_Profile => {
    if (resource.subject === undefined) {
        throw new Error("'subject' is required for http://hl7.org/fhir/StructureDefinition/devicemetricobservation");
    }
    const reference_is_valid_subject = (ref?: Reference) => {
        return !ref
            || ref.reference?.startsWith('Device/')
            || ref.reference?.startsWith('Group/')
            || ref.reference?.startsWith('Location/')
            || ref.reference?.startsWith('Patient/')
            ;
    }
    if ( !reference_is_valid_subject(resource.subject) ) {
        throw new Error("'subject' has different references in profile and specialization");
    }

    if (resource.effectiveDateTime === undefined) {
        throw new Error("'effectiveDateTime' is required for http://hl7.org/fhir/StructureDefinition/devicemetricobservation");
    }
    if (resource.device === undefined) {
        throw new Error("'device' is required for http://hl7.org/fhir/StructureDefinition/devicemetricobservation");
    }
    const reference_is_valid_device = (ref?: Reference) => {
        return !ref
            || ref.reference?.startsWith('Device/')
            || ref.reference?.startsWith('DeviceMetric/')
            ;
    }
    if ( !reference_is_valid_device(resource.device) ) {
        throw new Error("'device' has different references in profile and specialization");
    }

    const reference_is_valid_hasMember = (ref?: Reference) => {
        return !ref
            || ref.reference?.startsWith('MolecularSequence/')
            || ref.reference?.startsWith('Observation/')
            || ref.reference?.startsWith('QuestionnaireResponse/')
            ;
    }
    if ( !resource.hasMember || resource.hasMember.every( (ref) => reference_is_valid_hasMember(ref) ) ) {
        throw new Error("'hasMember' has different references in profile and specialization");
    }

    const reference_is_valid_derivedFrom = (ref?: Reference) => {
        return !ref
            || ref.reference?.startsWith('DocumentReference/')
            || ref.reference?.startsWith('ImagingStudy/')
            || ref.reference?.startsWith('Media/')
            || ref.reference?.startsWith('MolecularSequence/')
            || ref.reference?.startsWith('Observation/')
            || ref.reference?.startsWith('QuestionnaireResponse/')
            ;
    }
    if ( !resource.derivedFrom || resource.derivedFrom.every( (ref) => reference_is_valid_derivedFrom(ref) ) ) {
        throw new Error("'derivedFrom' has different references in profile and specialization");
    }

    return {
        __profileUrl: 'http://hl7.org/fhir/StructureDefinition/devicemetricobservation',
        identifier: resource.identifier,
        status: resource.status,
        code: resource.code,
        subject: resource.subject as Device_Metric_Observation_Profile['subject'],
        encounter: resource.encounter,
        effectiveDateTime: resource.effectiveDateTime,
        issued: resource.issued,
        valueQuantity: resource.valueQuantity,
        valueCodeableConcept: resource.valueCodeableConcept,
        valueString: resource.valueString,
        valueRange: resource.valueRange,
        valueRatio: resource.valueRatio,
        valueSampledData: resource.valueSampledData,
        valueTime: resource.valueTime,
        valueDateTime: resource.valueDateTime,
        valuePeriod: resource.valuePeriod,
        dataAbsentReason: resource.dataAbsentReason,
        interpretation: resource.interpretation,
        note: resource.note,
        bodySite: resource.bodySite,
        method: resource.method,
        specimen: resource.specimen,
        device: resource.device as Device_Metric_Observation_Profile['device'],
        referenceRange: resource.referenceRange,
        hasMember: resource.hasMember as Device_Metric_Observation_Profile['hasMember'],
        derivedFrom: resource.derivedFrom as Device_Metric_Observation_Profile['derivedFrom'],
    }
}
