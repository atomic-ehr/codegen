// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Range } from "../hl7-fhir-r4-core/Range";
import type { Reference } from "../hl7-fhir-r4-core/Reference";

export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Range } from "../hl7-fhir-r4-core/Range";
export type { Reference } from "../hl7-fhir-r4-core/Reference";

export interface SubstanceReferenceInformationClassification extends BackboneElement {
    classification?: CodeableConcept;
    domain?: CodeableConcept;
    source?: Reference<"DocumentReference">[];
    subtype?: CodeableConcept[];
}
export interface SubstanceReferenceInformationGene extends BackboneElement {
    gene?: CodeableConcept;
    geneSequenceOrigin?: CodeableConcept;
    source?: Reference<"DocumentReference">[];
}
export interface SubstanceReferenceInformationGeneElement extends BackboneElement {
    element?: Identifier;
    source?: Reference<"DocumentReference">[];
    type_?: CodeableConcept;
}
export interface SubstanceReferenceInformationTarget extends BackboneElement {
    amountQuantity?: Quantity;
    amountRange?: Range;
    amountString?: string;
    amountType?: CodeableConcept;
    interaction?: CodeableConcept;
    organism?: CodeableConcept;
    organismType?: CodeableConcept;
    source?: Reference<"DocumentReference">[];
    target?: Identifier;
    type_?: CodeableConcept;
}
export interface SubstanceReferenceInformation extends DomainResource {
    resourceType: "SubstanceReferenceInformation";

    classification?: SubstanceReferenceInformationClassification[];
    comment?: string;
    _comment?: Element;
    gene?: SubstanceReferenceInformationGene[];
    geneElement?: SubstanceReferenceInformationGeneElement[];
    target?: SubstanceReferenceInformationTarget[];
}
