// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Annotation } from "../hl7-fhir-r4-core/Annotation";
import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Reference } from "../hl7-fhir-r4-core/Reference";

export type { Annotation } from "../hl7-fhir-r4-core/Annotation";
export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Reference } from "../hl7-fhir-r4-core/Reference";

export interface VisionPrescriptionLensSpecification extends BackboneElement {
    add?: number;
    axis?: number;
    backCurve?: number;
    brand?: string;
    color?: string;
    cylinder?: number;
    diameter?: number;
    duration?: Quantity;
    eye: "right" | "left";
    note?: Annotation[];
    power?: number;
    prism?: VisionPrescriptionLensSpecificationPrism[];
    product: CodeableConcept;
    sphere?: number;
}
export interface VisionPrescriptionLensSpecificationPrism extends BackboneElement {
    amount: number;
    base: "up" | "down" | "in" | "out";
}
export interface VisionPrescription extends DomainResource {
    resourceType: "VisionPrescription";

    created: string;
    _created?: Element;
    dateWritten: string;
    _dateWritten?: Element;
    encounter?: Reference<"Encounter">;
    identifier?: Identifier[];
    lensSpecification: VisionPrescriptionLensSpecification[];
    patient: Reference<"Patient">;
    prescriber: Reference<"Practitioner" | "PractitionerRole">;
    status: "active" | "cancelled" | "draft" | "entered-in-error";
    _status?: Element;
}
