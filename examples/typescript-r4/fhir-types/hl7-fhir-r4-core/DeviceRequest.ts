// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Annotation } from "../hl7-fhir-r4-core/Annotation";
import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Range } from "../hl7-fhir-r4-core/Range";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { Timing } from "../hl7-fhir-r4-core/Timing";

export type { Annotation } from "../hl7-fhir-r4-core/Annotation";
export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Period } from "../hl7-fhir-r4-core/Period";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Range } from "../hl7-fhir-r4-core/Range";
export type { Reference } from "../hl7-fhir-r4-core/Reference";
export type { Timing } from "../hl7-fhir-r4-core/Timing";

export interface DeviceRequestParameter extends BackboneElement {
    code?: CodeableConcept;
    valueBoolean?: boolean;
    valueCodeableConcept?: CodeableConcept;
    valueQuantity?: Quantity;
    valueRange?: Range;
}

// CanonicalURL: http://hl7.org/fhir/StructureDefinition/DeviceRequest
export interface DeviceRequest extends DomainResource {
    resourceType: "DeviceRequest";

    authoredOn?: string;
    _authoredOn?: Element;
    basedOn?: Reference<"Resource">[];
    codeCodeableConcept?: CodeableConcept;
    codeReference?: Reference<"Device">;
    encounter?: Reference<"Encounter">;
    groupIdentifier?: Identifier;
    identifier?: Identifier[];
    instantiatesCanonical?: string[];
    _instantiatesCanonical?: Element;
    instantiatesUri?: string[];
    _instantiatesUri?: Element;
    insurance?: Reference<"ClaimResponse" | "Coverage">[];
    intent: "proposal" | "plan" | "directive" | "order" | "original-order" | "reflex-order" | "filler-order" | "instance-order" | "option";
    _intent?: Element;
    note?: Annotation[];
    occurrenceDateTime?: string;
    _occurrenceDateTime?: Element;
    occurrencePeriod?: Period;
    occurrenceTiming?: Timing;
    parameter?: DeviceRequestParameter[];
    performer?: Reference<"CareTeam" | "Device" | "HealthcareService" | "Organization" | "Patient" | "Practitioner" | "PractitionerRole" | "RelatedPerson">;
    performerType?: CodeableConcept;
    priority?: "routine" | "urgent" | "asap" | "stat";
    _priority?: Element;
    priorRequest?: Reference<"Resource">[];
    reasonCode?: CodeableConcept[];
    reasonReference?: Reference<"Condition" | "DiagnosticReport" | "DocumentReference" | "Observation">[];
    relevantHistory?: Reference<"Provenance">[];
    requester?: Reference<"Device" | "Organization" | "Practitioner" | "PractitionerRole">;
    status?: "draft" | "active" | "on-hold" | "revoked" | "completed" | "entered-in-error" | "unknown";
    _status?: Element;
    subject: Reference<"Device" | "Group" | "Location" | "Patient">;
    supportingInfo?: Reference<"Resource">[];
}
