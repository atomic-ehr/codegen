// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Attachment } from "../hl7-fhir-r4-core/Attachment";
import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { Coding } from "../hl7-fhir-r4-core/Coding";
import type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export type { Attachment } from "../hl7-fhir-r4-core/Attachment";
export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Coding } from "../hl7-fhir-r4-core/Coding";
export type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Period } from "../hl7-fhir-r4-core/Period";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Reference } from "../hl7-fhir-r4-core/Reference";
export type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export interface QuestionnaireItem extends BackboneElement {
    answerOption?: QuestionnaireItemAnswerOption[];
    answerValueSet?: string;
    code?: Coding[];
    definition?: string;
    enableBehavior?: "all" | "any";
    enableWhen?: QuestionnaireItemEnableWhen[];
    initial?: QuestionnaireItemInitial[];
    linkId: string;
    maxLength?: number;
    prefix?: string;
    readOnly?: boolean;
    repeats?: boolean;
    required?: boolean;
    text?: string;
    type: "group" | "display" | "question" | "boolean" | "decimal" | "integer" | "date" | "dateTime" | "time" | "string" | "text" | "url" | "choice" | "open-choice" | "attachment" | "reference" | "quantity";
}
export interface QuestionnaireItemAnswerOption extends BackboneElement {
    initialSelected?: boolean;
    valueCoding?: Coding;
    valueDate?: string;
    valueInteger?: number;
    valueReference?: Reference<"Resource">;
    valueString?: string;
    valueTime?: string;
}
export interface QuestionnaireItemEnableWhen extends BackboneElement {
    answerBoolean?: boolean;
    answerCoding?: Coding;
    answerDate?: string;
    answerDateTime?: string;
    answerDecimal?: number;
    answerInteger?: number;
    answerQuantity?: Quantity;
    answerReference?: Reference<"Resource">;
    answerString?: string;
    answerTime?: string;
    operator: "exists" | "=" | "!=" | ">" | "<" | ">=" | "<=";
    question: string;
}
export interface QuestionnaireItemInitial extends BackboneElement {
    valueAttachment?: Attachment;
    valueBoolean?: boolean;
    valueCoding?: Coding;
    valueDate?: string;
    valueDateTime?: string;
    valueDecimal?: number;
    valueInteger?: number;
    valueQuantity?: Quantity;
    valueReference?: Reference<"Resource">;
    valueString?: string;
    valueTime?: string;
    valueUri?: string;
}
export interface Questionnaire extends DomainResource {
    resourceType: "Questionnaire";

    approvalDate?: string;
    _approvalDate?: Element;
    code?: Coding[];
    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date?: string;
    _date?: Element;
    derivedFrom?: string[];
    _derivedFrom?: Element;
    description?: string;
    _description?: Element;
    effectivePeriod?: Period;
    experimental?: boolean;
    _experimental?: Element;
    identifier?: Identifier[];
    item?: QuestionnaireItem[];
    jurisdiction?: CodeableConcept[];
    lastReviewDate?: string;
    _lastReviewDate?: Element;
    name?: string;
    _name?: Element;
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    status: "draft" | "active" | "retired" | "unknown";
    _status?: Element;
    subjectType?: string[];
    _subjectType?: Element;
    title?: string;
    _title?: Element;
    url?: string;
    _url?: Element;
    useContext?: UsageContext[];
    version?: string;
    _version?: Element;
}
