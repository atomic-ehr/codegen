// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import type { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import type { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import type { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import type { UsageContext } from '../hl7-fhir-r4-core/UsageContext';

export type { BackboneElement }from '../hl7-fhir-r4-core/BackboneElement';;
export type { CodeableConcept }from '../hl7-fhir-r4-core/CodeableConcept';;
export type { ContactDetail }from '../hl7-fhir-r4-core/ContactDetail';;
export type { UsageContext }from '../hl7-fhir-r4-core/UsageContext';;


export interface TerminologyCapabilitiesClosure extends BackboneElement {
  translation?: boolean;
}

export interface TerminologyCapabilitiesCodeSystem extends BackboneElement {
  subsumption?: boolean;
  uri?: string;
  version?: TerminologyCapabilitiesCodeSystemVersion[];
}

export interface TerminologyCapabilitiesCodeSystemVersion extends BackboneElement {
  code?: string;
  compositional?: boolean;
  filter?: TerminologyCapabilitiesCodeSystemVersionFilter[];
  isDefault?: boolean;
  language?: string[];
  property?: string[];
}

export interface TerminologyCapabilitiesCodeSystemVersionFilter extends BackboneElement {
  code: string;
  op: string[];
}

export interface TerminologyCapabilitiesExpansion extends BackboneElement {
  hierarchical?: boolean;
  incomplete?: boolean;
  paging?: boolean;
  parameter?: TerminologyCapabilitiesExpansionParameter[];
  textFilter?: string;
}

export interface TerminologyCapabilitiesExpansionParameter extends BackboneElement {
  documentation?: string;
  name: string;
}

export interface TerminologyCapabilitiesImplementation extends BackboneElement {
  description: string;
  url?: string;
}

export interface TerminologyCapabilitiesSoftware extends BackboneElement {
  name: string;
  version?: string;
}

export interface TerminologyCapabilitiesTranslation extends BackboneElement {
  needsMap: boolean;
}

export interface TerminologyCapabilitiesValidateCode extends BackboneElement {
  translations: boolean;
}

export interface TerminologyCapabilities extends DomainResource {
  resourceType: 'TerminologyCapabilities';
  
  closure?: TerminologyCapabilitiesClosure;
  codeSearch?: 'explicit' | 'all';
  _codeSearch?: Element;
  codeSystem?: TerminologyCapabilitiesCodeSystem[];
  contact?: ContactDetail[];
  copyright?: string;
  _copyright?: Element;
  date: string;
  _date?: Element;
  description?: string;
  _description?: Element;
  expansion?: TerminologyCapabilitiesExpansion;
  experimental?: boolean;
  _experimental?: Element;
  implementation?: TerminologyCapabilitiesImplementation;
  jurisdiction?: CodeableConcept[];
  kind: 'instance' | 'capability' | 'requirements';
  _kind?: Element;
  lockedDate?: boolean;
  _lockedDate?: Element;
  name?: string;
  _name?: Element;
  publisher?: string;
  _publisher?: Element;
  purpose?: string;
  _purpose?: Element;
  software?: TerminologyCapabilitiesSoftware;
  status: 'draft' | 'active' | 'retired' | 'unknown';
  _status?: Element;
  title?: string;
  _title?: Element;
  translation?: TerminologyCapabilitiesTranslation;
  url?: string;
  _url?: Element;
  useContext?: UsageContext[];
  validateCode?: TerminologyCapabilitiesValidateCode;
  version?: string;
  _version?: Element;
}

