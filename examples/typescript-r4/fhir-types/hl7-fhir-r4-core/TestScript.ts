// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { Coding } from "../hl7-fhir-r4-core/Coding";
import type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Coding } from "../hl7-fhir-r4-core/Coding";
export type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Reference } from "../hl7-fhir-r4-core/Reference";
export type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export interface TestScriptDestination extends BackboneElement {
    index: number;
    profile: Coding;
}

export interface TestScriptFixture extends BackboneElement {
    autocreate: boolean;
    autodelete: boolean;
    resource?: Reference<"Resource">;
}

export interface TestScriptMetadata extends BackboneElement {
    capability: TestScriptMetadataCapability[];
    link?: TestScriptMetadataLink[];
}

export interface TestScriptMetadataCapability extends BackboneElement {
    capabilities: string;
    description?: string;
    destination?: number;
    link?: string[];
    origin?: number[];
    required: boolean;
    validated: boolean;
}

export interface TestScriptMetadataLink extends BackboneElement {
    description?: string;
    url: string;
}

export interface TestScriptOrigin extends BackboneElement {
    index: number;
    profile: Coding;
}

export interface TestScriptSetup extends BackboneElement {
    action: TestScriptSetupAction[];
}

export interface TestScriptSetupAction extends BackboneElement {
    assert?: TestScriptSetupActionAssert;
    operation?: TestScriptSetupActionOperation;
}

export interface TestScriptSetupActionAssert extends BackboneElement {
    compareToSourceExpression?: string;
    compareToSourceId?: string;
    compareToSourcePath?: string;
    contentType?: string;
    description?: string;
    direction?: "response" | "request";
    expression?: string;
    headerField?: string;
    label?: string;
    minimumId?: string;
    navigationLinks?: boolean;
    operator?: "equals" | "notEquals" | "in" | "notIn" | "greaterThan" | "lessThan" | "empty" | "notEmpty" | "contains" | "notContains" | "eval";
    path?: string;
    requestMethod?: "delete" | "get" | "options" | "patch" | "post" | "put" | "head";
    requestURL?: string;
    resource?: string;
    response?: "okay" | "created" | "noContent" | "notModified" | "bad" | "forbidden" | "notFound" | "methodNotAllowed" | "conflict" | "gone" | "preconditionFailed" | "unprocessable";
    responseCode?: string;
    sourceId?: string;
    validateProfileId?: string;
    value?: string;
    warningOnly: boolean;
}

export interface TestScriptSetupActionOperation extends BackboneElement {
    accept?: string;
    contentType?: string;
    description?: string;
    destination?: number;
    encodeRequestUrl: boolean;
    label?: string;
    method?: "delete" | "get" | "options" | "patch" | "post" | "put" | "head";
    origin?: number;
    params?: string;
    requestHeader?: TestScriptSetupActionOperationRequestHeader[];
    requestId?: string;
    resource?: string;
    responseId?: string;
    sourceId?: string;
    targetId?: string;
    type_?: Coding;
    url?: string;
}

export interface TestScriptSetupActionOperationRequestHeader extends BackboneElement {
    field: string;
    value: string;
}

export interface TestScriptTeardown extends BackboneElement {
    action: TestScriptTeardownAction[];
}

export interface TestScriptTeardownAction extends BackboneElement {
    operation: TestScriptSetupActionOperation;
}

export interface TestScriptTest extends BackboneElement {
    action: TestScriptTestAction[];
    description?: string;
    name?: string;
}

export interface TestScriptTestAction extends BackboneElement {
    assert?: TestScriptSetupActionAssert;
    operation?: TestScriptSetupActionOperation;
}

export interface TestScriptVariable extends BackboneElement {
    defaultValue?: string;
    description?: string;
    expression?: string;
    headerField?: string;
    hint?: string;
    name: string;
    path?: string;
    sourceId?: string;
}

// CanonicalURL: http://hl7.org/fhir/StructureDefinition/TestScript
export interface TestScript extends DomainResource {
    resourceType: "TestScript";

    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date?: string;
    _date?: Element;
    description?: string;
    _description?: Element;
    destination?: TestScriptDestination[];
    experimental?: boolean;
    _experimental?: Element;
    fixture?: TestScriptFixture[];
    identifier?: Identifier;
    jurisdiction?: CodeableConcept[];
    metadata?: TestScriptMetadata;
    name: string;
    _name?: Element;
    origin?: TestScriptOrigin[];
    profile?: Reference<"Resource">[];
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    setup?: TestScriptSetup;
    status: "draft" | "active" | "retired" | "unknown";
    _status?: Element;
    teardown?: TestScriptTeardown;
    test?: TestScriptTest[];
    title?: string;
    _title?: Element;
    url: string;
    _url?: Element;
    useContext?: UsageContext[];
    variable?: TestScriptVariable[];
    version?: string;
    _version?: Element;
}
