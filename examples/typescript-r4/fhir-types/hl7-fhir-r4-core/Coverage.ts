// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Money } from "../hl7-fhir-r4-core/Money";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Reference } from "../hl7-fhir-r4-core/Reference";

export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Money } from "../hl7-fhir-r4-core/Money";
export type { Period } from "../hl7-fhir-r4-core/Period";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Reference } from "../hl7-fhir-r4-core/Reference";

export interface CoverageClass extends BackboneElement {
    name?: string;
    type: CodeableConcept;
    value: string;
}
export interface CoverageCostToBeneficiary extends BackboneElement {
    exception?: CoverageCostToBeneficiaryException[];
    type?: CodeableConcept;
    valueMoney?: Money;
    valueQuantity?: Quantity;
}
export interface CoverageCostToBeneficiaryException extends BackboneElement {
    period?: Period;
    type: CodeableConcept;
}
export interface Coverage extends DomainResource {
    resourceType: "Coverage";

    beneficiary: Reference<"Patient">;
    class?: CoverageClass[];
    contract?: Reference<"Contract">[];
    costToBeneficiary?: CoverageCostToBeneficiary[];
    dependent?: string;
    _dependent?: Element;
    identifier?: Identifier[];
    network?: string;
    _network?: Element;
    order?: number;
    _order?: Element;
    payor: Reference<"Organization" | "Patient" | "RelatedPerson">[];
    period?: Period;
    policyHolder?: Reference<"Organization" | "Patient" | "RelatedPerson">;
    relationship?: CodeableConcept;
    status: "active" | "cancelled" | "draft" | "entered-in-error";
    _status?: Element;
    subrogation?: boolean;
    _subrogation?: Element;
    subscriber?: Reference<"Patient" | "RelatedPerson">;
    subscriberId?: string;
    _subscriberId?: Element;
    type?: CodeableConcept;
}
