// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Range } from "../hl7-fhir-r4-core/Range";
import type { Reference } from "../hl7-fhir-r4-core/Reference";

export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Period } from "../hl7-fhir-r4-core/Period";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Range } from "../hl7-fhir-r4-core/Range";
export type { Reference } from "../hl7-fhir-r4-core/Reference";

export interface GroupCharacteristic extends BackboneElement {
    code: CodeableConcept;
    exclude: boolean;
    period?: Period;
    valueBoolean?: boolean;
    valueCodeableConcept?: CodeableConcept;
    valueQuantity?: Quantity;
    valueRange?: Range;
    valueReference?: Reference;
}
export interface GroupMember extends BackboneElement {
    entity: Reference<"Device" | "Group" | "Medication" | "Patient" | "Practitioner" | "PractitionerRole" | "Substance">;
    inactive?: boolean;
    period?: Period;
}
export interface Group extends DomainResource {
    resourceType: "Group";

    active?: boolean;
    _active?: Element;
    actual: boolean;
    _actual?: Element;
    characteristic?: GroupCharacteristic[];
    code?: CodeableConcept;
    identifier?: Identifier[];
    managingEntity?: Reference<"Organization" | "Practitioner" | "PractitionerRole" | "RelatedPerson">;
    member?: GroupMember[];
    name?: string;
    _name?: Element;
    quantity?: number;
    _quantity?: Element;
    type_: "person" | "animal" | "practitioner" | "device" | "medication" | "substance";
    _type_?: Element;
}
