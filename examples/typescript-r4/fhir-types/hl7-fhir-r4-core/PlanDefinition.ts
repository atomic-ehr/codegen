// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Age } from '../hl7-fhir-r4-core/Age';
import type { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import type { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import type { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import type { DataRequirement } from '../hl7-fhir-r4-core/DataRequirement';
import type { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import type { Duration } from '../hl7-fhir-r4-core/Duration';
import type { Expression } from '../hl7-fhir-r4-core/Expression';
import type { Identifier } from '../hl7-fhir-r4-core/Identifier';
import type { Period } from '../hl7-fhir-r4-core/Period';
import type { Quantity } from '../hl7-fhir-r4-core/Quantity';
import type { Range } from '../hl7-fhir-r4-core/Range';
import type { Reference } from '../hl7-fhir-r4-core/Reference';
import type { RelatedArtifact } from '../hl7-fhir-r4-core/RelatedArtifact';
import type { Timing } from '../hl7-fhir-r4-core/Timing';
import type { TriggerDefinition } from '../hl7-fhir-r4-core/TriggerDefinition';
import type { UsageContext } from '../hl7-fhir-r4-core/UsageContext';

export type { Age }from '../hl7-fhir-r4-core/Age';;
export type { BackboneElement }from '../hl7-fhir-r4-core/BackboneElement';;
export type { CodeableConcept }from '../hl7-fhir-r4-core/CodeableConcept';;
export type { ContactDetail }from '../hl7-fhir-r4-core/ContactDetail';;
export type { DataRequirement }from '../hl7-fhir-r4-core/DataRequirement';;
export type { Duration }from '../hl7-fhir-r4-core/Duration';;
export type { Expression }from '../hl7-fhir-r4-core/Expression';;
export type { Identifier }from '../hl7-fhir-r4-core/Identifier';;
export type { Period }from '../hl7-fhir-r4-core/Period';;
export type { Quantity }from '../hl7-fhir-r4-core/Quantity';;
export type { Range }from '../hl7-fhir-r4-core/Range';;
export type { Reference }from '../hl7-fhir-r4-core/Reference';;
export type { RelatedArtifact }from '../hl7-fhir-r4-core/RelatedArtifact';;
export type { Timing }from '../hl7-fhir-r4-core/Timing';;
export type { TriggerDefinition }from '../hl7-fhir-r4-core/TriggerDefinition';;
export type { UsageContext }from '../hl7-fhir-r4-core/UsageContext';;


export interface PlanDefinitionAction extends BackboneElement {
  cardinalityBehavior?: 'single' | 'multiple';
  code?: CodeableConcept[];
  condition?: PlanDefinitionActionCondition[];
  definitionCanonical?: string;
  definitionUri?: string;
  description?: string;
  documentation?: RelatedArtifact[];
  dynamicValue?: PlanDefinitionActionDynamicValue[];
  goalId?: string[];
  groupingBehavior?: 'visual-group' | 'logical-group' | 'sentence-group';
  input?: DataRequirement[];
  output?: DataRequirement[];
  participant?: PlanDefinitionActionParticipant[];
  precheckBehavior?: 'yes' | 'no';
  prefix?: string;
  priority?: 'routine' | 'urgent' | 'asap' | 'stat';
  reason?: CodeableConcept[];
  relatedAction?: PlanDefinitionActionRelatedAction[];
  requiredBehavior?: 'must' | 'could' | 'must-unless-documented';
  selectionBehavior?: 'any' | 'all' | 'all-or-none' | 'exactly-one' | 'at-most-one' | 'one-or-more';
  subjectCodeableConcept?: CodeableConcept;
  subjectReference?: Reference<'Group'>;
  textEquivalent?: string;
  timingAge?: Age;
  timingDateTime?: string;
  timingDuration?: Duration;
  timingPeriod?: Period;
  timingRange?: Range;
  timingTiming?: Timing;
  title?: string;
  transform?: string;
  trigger?: TriggerDefinition[];
  type?: CodeableConcept;
}

export interface PlanDefinitionActionCondition extends BackboneElement {
  expression?: Expression;
  kind: 'applicability' | 'start' | 'stop';
}

export interface PlanDefinitionActionDynamicValue extends BackboneElement {
  expression?: Expression;
  path?: string;
}

export interface PlanDefinitionActionParticipant extends BackboneElement {
  role?: CodeableConcept;
  type: 'patient' | 'practitioner' | 'related-person' | 'device';
}

export interface PlanDefinitionActionRelatedAction extends BackboneElement {
  actionId: string;
  offsetDuration?: Duration;
  offsetRange?: Range;
  relationship: 'before-start' | 'before' | 'before-end' | 'concurrent-with-start' | 'concurrent' | 'concurrent-with-end' | 'after-start' | 'after' | 'after-end';
}

export interface PlanDefinitionGoal extends BackboneElement {
  addresses?: CodeableConcept[];
  category?: CodeableConcept;
  description: CodeableConcept;
  documentation?: RelatedArtifact[];
  priority?: CodeableConcept;
  start?: CodeableConcept;
  target?: PlanDefinitionGoalTarget[];
}

export interface PlanDefinitionGoalTarget extends BackboneElement {
  detailCodeableConcept?: CodeableConcept;
  detailQuantity?: Quantity;
  detailRange?: Range;
  due?: Duration;
  measure?: CodeableConcept;
}

export interface PlanDefinition extends DomainResource {
  resourceType: 'PlanDefinition';
  
  action?: PlanDefinitionAction[];
  approvalDate?: string;
  _approvalDate?: Element;
  author?: ContactDetail[];
  contact?: ContactDetail[];
  copyright?: string;
  _copyright?: Element;
  date?: string;
  _date?: Element;
  description?: string;
  _description?: Element;
  editor?: ContactDetail[];
  effectivePeriod?: Period;
  endorser?: ContactDetail[];
  experimental?: boolean;
  _experimental?: Element;
  goal?: PlanDefinitionGoal[];
  identifier?: Identifier[];
  jurisdiction?: CodeableConcept[];
  lastReviewDate?: string;
  _lastReviewDate?: Element;
  library?: string[];
  _library?: Element;
  name?: string;
  _name?: Element;
  publisher?: string;
  _publisher?: Element;
  purpose?: string;
  _purpose?: Element;
  relatedArtifact?: RelatedArtifact[];
  reviewer?: ContactDetail[];
  status: 'draft' | 'active' | 'retired' | 'unknown';
  _status?: Element;
  subjectCodeableConcept?: CodeableConcept;
  subjectReference?: Reference<'Group'>;
  subtitle?: string;
  _subtitle?: Element;
  title?: string;
  _title?: Element;
  topic?: CodeableConcept[];
  type?: CodeableConcept;
  url?: string;
  _url?: Element;
  usage?: string;
  _usage?: Element;
  useContext?: UsageContext[];
  version?: string;
  _version?: Element;
}

