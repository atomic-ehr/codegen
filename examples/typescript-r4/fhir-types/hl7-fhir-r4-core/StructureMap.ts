// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Address } from '../hl7-fhir-r4-core/Address';
import type { Age } from '../hl7-fhir-r4-core/Age';
import type { Annotation } from '../hl7-fhir-r4-core/Annotation';
import type { Attachment } from '../hl7-fhir-r4-core/Attachment';
import type { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import type { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import type { Coding } from '../hl7-fhir-r4-core/Coding';
import type { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import type { ContactPoint } from '../hl7-fhir-r4-core/ContactPoint';
import type { Contributor } from '../hl7-fhir-r4-core/Contributor';
import type { Count } from '../hl7-fhir-r4-core/Count';
import type { DataRequirement } from '../hl7-fhir-r4-core/DataRequirement';
import type { Distance } from '../hl7-fhir-r4-core/Distance';
import type { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import type { Dosage } from '../hl7-fhir-r4-core/Dosage';
import type { Duration } from '../hl7-fhir-r4-core/Duration';
import type { Expression } from '../hl7-fhir-r4-core/Expression';
import type { HumanName } from '../hl7-fhir-r4-core/HumanName';
import type { Identifier } from '../hl7-fhir-r4-core/Identifier';
import type { Meta } from '../hl7-fhir-r4-core/Meta';
import type { Money } from '../hl7-fhir-r4-core/Money';
import type { ParameterDefinition } from '../hl7-fhir-r4-core/ParameterDefinition';
import type { Period } from '../hl7-fhir-r4-core/Period';
import type { Quantity } from '../hl7-fhir-r4-core/Quantity';
import type { Range } from '../hl7-fhir-r4-core/Range';
import type { Ratio } from '../hl7-fhir-r4-core/Ratio';
import type { Reference } from '../hl7-fhir-r4-core/Reference';
import type { RelatedArtifact } from '../hl7-fhir-r4-core/RelatedArtifact';
import type { SampledData } from '../hl7-fhir-r4-core/SampledData';
import type { Signature } from '../hl7-fhir-r4-core/Signature';
import type { Timing } from '../hl7-fhir-r4-core/Timing';
import type { TriggerDefinition } from '../hl7-fhir-r4-core/TriggerDefinition';
import type { UsageContext } from '../hl7-fhir-r4-core/UsageContext';

export type { Address }from '../hl7-fhir-r4-core/Address';;
export type { Age }from '../hl7-fhir-r4-core/Age';;
export type { Annotation }from '../hl7-fhir-r4-core/Annotation';;
export type { Attachment }from '../hl7-fhir-r4-core/Attachment';;
export type { BackboneElement }from '../hl7-fhir-r4-core/BackboneElement';;
export type { CodeableConcept }from '../hl7-fhir-r4-core/CodeableConcept';;
export type { Coding }from '../hl7-fhir-r4-core/Coding';;
export type { ContactDetail }from '../hl7-fhir-r4-core/ContactDetail';;
export type { ContactPoint }from '../hl7-fhir-r4-core/ContactPoint';;
export type { Contributor }from '../hl7-fhir-r4-core/Contributor';;
export type { Count }from '../hl7-fhir-r4-core/Count';;
export type { DataRequirement }from '../hl7-fhir-r4-core/DataRequirement';;
export type { Distance }from '../hl7-fhir-r4-core/Distance';;
export type { Dosage }from '../hl7-fhir-r4-core/Dosage';;
export type { Duration }from '../hl7-fhir-r4-core/Duration';;
export type { Expression }from '../hl7-fhir-r4-core/Expression';;
export type { HumanName }from '../hl7-fhir-r4-core/HumanName';;
export type { Identifier }from '../hl7-fhir-r4-core/Identifier';;
export type { Meta }from '../hl7-fhir-r4-core/Meta';;
export type { Money }from '../hl7-fhir-r4-core/Money';;
export type { ParameterDefinition }from '../hl7-fhir-r4-core/ParameterDefinition';;
export type { Period }from '../hl7-fhir-r4-core/Period';;
export type { Quantity }from '../hl7-fhir-r4-core/Quantity';;
export type { Range }from '../hl7-fhir-r4-core/Range';;
export type { Ratio }from '../hl7-fhir-r4-core/Ratio';;
export type { Reference }from '../hl7-fhir-r4-core/Reference';;
export type { RelatedArtifact }from '../hl7-fhir-r4-core/RelatedArtifact';;
export type { SampledData }from '../hl7-fhir-r4-core/SampledData';;
export type { Signature }from '../hl7-fhir-r4-core/Signature';;
export type { Timing }from '../hl7-fhir-r4-core/Timing';;
export type { TriggerDefinition }from '../hl7-fhir-r4-core/TriggerDefinition';;
export type { UsageContext }from '../hl7-fhir-r4-core/UsageContext';;


export interface StructureMapGroup extends BackboneElement {
  documentation?: string;
  extends?: string;
  input: StructureMapGroupInput[];
  name: string;
  rule: StructureMapGroupRule[];
  typeMode: 'none' | 'types' | 'type-and-types';
}

export interface StructureMapGroupInput extends BackboneElement {
  documentation?: string;
  mode: 'source' | 'target';
  name: string;
  type?: string;
}

export interface StructureMapGroupRule extends BackboneElement {
  dependent?: StructureMapGroupRuleDependent[];
  documentation?: string;
  name: string;
  source: StructureMapGroupRuleSource[];
  target?: StructureMapGroupRuleTarget[];
}

export interface StructureMapGroupRuleDependent extends BackboneElement {
  name: string;
  variable: string[];
}

export interface StructureMapGroupRuleSource extends BackboneElement {
  check?: string;
  condition?: string;
  context: string;
  defaultValueAddress?: Address;
  defaultValueAge?: Age;
  defaultValueAnnotation?: Annotation;
  defaultValueAttachment?: Attachment;
  defaultValueBase64Binary?: string;
  defaultValueBoolean?: boolean;
  defaultValueCanonical?: string;
  defaultValueCode?: string;
  defaultValueCodeableConcept?: CodeableConcept;
  defaultValueCoding?: Coding;
  defaultValueContactDetail?: ContactDetail;
  defaultValueContactPoint?: ContactPoint;
  defaultValueContributor?: Contributor;
  defaultValueCount?: Count;
  defaultValueDataRequirement?: DataRequirement;
  defaultValueDate?: string;
  defaultValueDateTime?: string;
  defaultValueDecimal?: number;
  defaultValueDistance?: Distance;
  defaultValueDosage?: Dosage;
  defaultValueDuration?: Duration;
  defaultValueExpression?: Expression;
  defaultValueHumanName?: HumanName;
  defaultValueId?: string;
  defaultValueIdentifier?: Identifier;
  defaultValueInstant?: string;
  defaultValueInteger?: number;
  defaultValueMarkdown?: string;
  defaultValueMeta?: Meta;
  defaultValueMoney?: Money;
  defaultValueOid?: string;
  defaultValueParameterDefinition?: ParameterDefinition;
  defaultValuePeriod?: Period;
  defaultValuePositiveInt?: number;
  defaultValueQuantity?: Quantity;
  defaultValueRange?: Range;
  defaultValueRatio?: Ratio;
  defaultValueReference?: Reference;
  defaultValueRelatedArtifact?: RelatedArtifact;
  defaultValueSampledData?: SampledData;
  defaultValueSignature?: Signature;
  defaultValueString?: string;
  defaultValueTime?: string;
  defaultValueTiming?: Timing;
  defaultValueTriggerDefinition?: TriggerDefinition;
  defaultValueUnsignedInt?: number;
  defaultValueUri?: string;
  defaultValueUrl?: string;
  defaultValueUsageContext?: UsageContext;
  defaultValueUuid?: string;
  element?: string;
  listMode?: 'first' | 'not_first' | 'last' | 'not_last' | 'only_one';
  logMessage?: string;
  max?: string;
  min?: number;
  type?: string;
  variable?: string;
}

export interface StructureMapGroupRuleTarget extends BackboneElement {
  context?: string;
  contextType?: 'type' | 'variable';
  element?: string;
  listMode?: 'first' | 'share' | 'last' | 'collate'[];
  listRuleId?: string;
  parameter?: StructureMapGroupRuleTargetParameter[];
  transform?: 'create' | 'copy' | 'truncate' | 'escape' | 'cast' | 'append' | 'translate' | 'reference' | 'dateOp' | 'uuid' | 'pointer' | 'evaluate' | 'cc' | 'c' | 'qty' | 'id' | 'cp';
  variable?: string;
}

export interface StructureMapGroupRuleTargetParameter extends BackboneElement {
  valueBoolean?: boolean;
  valueDecimal?: number;
  valueId?: string;
  valueInteger?: number;
  valueString?: string;
}

export interface StructureMapStructure extends BackboneElement {
  alias?: string;
  documentation?: string;
  mode: 'source' | 'queried' | 'target' | 'produced';
  url: string;
}

export interface StructureMap extends DomainResource {
  resourceType: 'StructureMap';
  
  contact?: ContactDetail[];
  copyright?: string;
  _copyright?: Element;
  date?: string;
  _date?: Element;
  description?: string;
  _description?: Element;
  experimental?: boolean;
  _experimental?: Element;
  group: StructureMapGroup[];
  identifier?: Identifier[];
  import?: string[];
  _import?: Element;
  jurisdiction?: CodeableConcept[];
  name: string;
  _name?: Element;
  publisher?: string;
  _publisher?: Element;
  purpose?: string;
  _purpose?: Element;
  status: 'draft' | 'active' | 'retired' | 'unknown';
  _status?: Element;
  structure?: StructureMapStructure[];
  title?: string;
  _title?: Element;
  url: string;
  _url?: Element;
  useContext?: UsageContext[];
  version?: string;
  _version?: Element;
}

