// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import type { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import type { ContactDetail } from '../hl7-fhir-r4-core/ContactDetail';
import type { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import type { Reference } from '../hl7-fhir-r4-core/Reference';
import type { UsageContext } from '../hl7-fhir-r4-core/UsageContext';

export type { BackboneElement }from '../hl7-fhir-r4-core/BackboneElement';;
export type { CodeableConcept }from '../hl7-fhir-r4-core/CodeableConcept';;
export type { ContactDetail }from '../hl7-fhir-r4-core/ContactDetail';;
export type { Reference }from '../hl7-fhir-r4-core/Reference';;
export type { UsageContext }from '../hl7-fhir-r4-core/UsageContext';;


export interface ImplementationGuideDefinition extends BackboneElement {
  grouping?: ImplementationGuideDefinitionGrouping[];
  page?: ImplementationGuideDefinitionPage;
  parameter?: ImplementationGuideDefinitionParameter[];
  resource: ImplementationGuideDefinitionResource[];
  template?: ImplementationGuideDefinitionTemplate[];
}

export interface ImplementationGuideDefinitionGrouping extends BackboneElement {
  description?: string;
  name: string;
}

export interface ImplementationGuideDefinitionPage extends BackboneElement {
  generation: 'html' | 'markdown' | 'xml' | 'generated';
  nameReference?: Reference<'Binary'>;
  nameUrl?: string;
  title: string;
}

export interface ImplementationGuideDefinitionParameter extends BackboneElement {
  code: 'apply' | 'path-resource' | 'path-pages' | 'path-tx-cache' | 'expansion-parameter' | 'rule-broken-links' | 'generate-xml' | 'generate-json' | 'generate-turtle' | 'html-template';
  value: string;
}

export interface ImplementationGuideDefinitionResource extends BackboneElement {
  description?: string;
  exampleBoolean?: boolean;
  exampleCanonical?: string;
  fhirVersion?: '0.01' | '0.05' | '0.06' | '0.11' | '0.0.80' | '0.0.81' | '0.0.82' | '0.4.0' | '0.5.0' | '1.0.0' | '1.0.1' | '1.0.2' | '1.1.0' | '1.4.0' | '1.6.0' | '1.8.0' | '3.0.0' | '3.0.1' | '3.3.0' | '3.5.0' | '4.0.0' | '4.0.1'[];
  groupingId?: string;
  name?: string;
  reference: Reference<'Resource'>;
}

export interface ImplementationGuideDefinitionTemplate extends BackboneElement {
  code: string;
  scope?: string;
  source: string;
}

export interface ImplementationGuideDependsOn extends BackboneElement {
  packageId?: string;
  uri: string;
  version?: string;
}

export interface ImplementationGuideGlobal extends BackboneElement {
  profile: string;
  type: string;
}

export interface ImplementationGuideManifest extends BackboneElement {
  image?: string[];
  other?: string[];
  page?: ImplementationGuideManifestPage[];
  rendering?: string;
  resource: ImplementationGuideManifestResource[];
}

export interface ImplementationGuideManifestPage extends BackboneElement {
  anchor?: string[];
  name: string;
  title?: string;
}

export interface ImplementationGuideManifestResource extends BackboneElement {
  exampleBoolean?: boolean;
  exampleCanonical?: string;
  reference: Reference<'Resource'>;
  relativePath?: string;
}

export interface ImplementationGuide extends DomainResource {
  resourceType: 'ImplementationGuide';
  
  contact?: ContactDetail[];
  copyright?: string;
  _copyright?: Element;
  date?: string;
  _date?: Element;
  definition?: ImplementationGuideDefinition;
  dependsOn?: ImplementationGuideDependsOn[];
  description?: string;
  _description?: Element;
  experimental?: boolean;
  _experimental?: Element;
  fhirVersion: '0.01' | '0.05' | '0.06' | '0.11' | '0.0.80' | '0.0.81' | '0.0.82' | '0.4.0' | '0.5.0' | '1.0.0' | '1.0.1' | '1.0.2' | '1.1.0' | '1.4.0' | '1.6.0' | '1.8.0' | '3.0.0' | '3.0.1' | '3.3.0' | '3.5.0' | '4.0.0' | '4.0.1'[];
  _fhirVersion?: Element;
  global?: ImplementationGuideGlobal[];
  jurisdiction?: CodeableConcept[];
  license?: string;
  _license?: Element;
  manifest?: ImplementationGuideManifest;
  name: string;
  _name?: Element;
  packageId: string;
  _packageId?: Element;
  publisher?: string;
  _publisher?: Element;
  status: 'draft' | 'active' | 'retired' | 'unknown';
  _status?: Element;
  title?: string;
  _title?: Element;
  url: string;
  _url?: Element;
  useContext?: UsageContext[];
  version?: string;
  _version?: Element;
}

