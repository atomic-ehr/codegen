// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Annotation } from "../hl7-fhir-r4-core/Annotation";
import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Quantity } from "../hl7-fhir-r4-core/Quantity";
import type { Ratio } from "../hl7-fhir-r4-core/Ratio";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { Timing } from "../hl7-fhir-r4-core/Timing";

export type { Annotation } from "../hl7-fhir-r4-core/Annotation";
export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Quantity } from "../hl7-fhir-r4-core/Quantity";
export type { Ratio } from "../hl7-fhir-r4-core/Ratio";
export type { Reference } from "../hl7-fhir-r4-core/Reference";
export type { Timing } from "../hl7-fhir-r4-core/Timing";

export interface NutritionOrderEnteralFormula extends BackboneElement {
    additiveProductName?: string;
    additiveType?: CodeableConcept;
    administration?: NutritionOrderEnteralFormulaAdministration[];
    administrationInstruction?: string;
    baseFormulaProductName?: string;
    baseFormulaType?: CodeableConcept;
    caloricDensity?: Quantity;
    maxVolumeToDeliver?: Quantity;
    routeofAdministration?: CodeableConcept;
}
export interface NutritionOrderEnteralFormulaAdministration extends BackboneElement {
    quantity?: Quantity;
    rateQuantity?: Quantity;
    rateRatio?: Ratio;
    schedule?: Timing;
}
export interface NutritionOrderOralDiet extends BackboneElement {
    fluidConsistencyType?: CodeableConcept[];
    instruction?: string;
    nutrient?: NutritionOrderOralDietNutrient[];
    schedule?: Timing[];
    texture?: NutritionOrderOralDietTexture[];
    type_?: CodeableConcept[];
}
export interface NutritionOrderOralDietNutrient extends BackboneElement {
    amount?: Quantity;
    modifier?: CodeableConcept;
}
export interface NutritionOrderOralDietTexture extends BackboneElement {
    foodType?: CodeableConcept;
    modifier?: CodeableConcept;
}
export interface NutritionOrderSupplement extends BackboneElement {
    instruction?: string;
    productName?: string;
    quantity?: Quantity;
    schedule?: Timing[];
    type_?: CodeableConcept;
}
export interface NutritionOrder extends DomainResource {
    resourceType: "NutritionOrder";

    allergyIntolerance?: Reference<"AllergyIntolerance">[];
    dateTime: string;
    _dateTime?: Element;
    encounter?: Reference<"Encounter">;
    enteralFormula?: NutritionOrderEnteralFormula;
    excludeFoodModifier?: CodeableConcept[];
    foodPreferenceModifier?: CodeableConcept[];
    identifier?: Identifier[];
    instantiates?: string[];
    _instantiates?: Element;
    instantiatesCanonical?: string[];
    _instantiatesCanonical?: Element;
    instantiatesUri?: string[];
    _instantiatesUri?: Element;
    intent: "proposal" | "plan" | "directive" | "order" | "original-order" | "reflex-order" | "filler-order" | "instance-order" | "option";
    _intent?: Element;
    note?: Annotation[];
    oralDiet?: NutritionOrderOralDiet;
    orderer?: Reference<"Practitioner" | "PractitionerRole">;
    patient: Reference<"Patient">;
    status: "draft" | "active" | "on-hold" | "revoked" | "completed" | "entered-in-error" | "unknown";
    _status?: Element;
    supplement?: NutritionOrderSupplement[];
}
