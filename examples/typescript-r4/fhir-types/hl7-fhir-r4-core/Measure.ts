// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
import type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
import type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
import type { DomainResource } from "../hl7-fhir-r4-core/DomainResource";
import type { Expression } from "../hl7-fhir-r4-core/Expression";
import type { Identifier } from "../hl7-fhir-r4-core/Identifier";
import type { Period } from "../hl7-fhir-r4-core/Period";
import type { Reference } from "../hl7-fhir-r4-core/Reference";
import type { RelatedArtifact } from "../hl7-fhir-r4-core/RelatedArtifact";
import type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export type { BackboneElement } from "../hl7-fhir-r4-core/BackboneElement";
export type { CodeableConcept } from "../hl7-fhir-r4-core/CodeableConcept";
export type { ContactDetail } from "../hl7-fhir-r4-core/ContactDetail";
export type { Expression } from "../hl7-fhir-r4-core/Expression";
export type { Identifier } from "../hl7-fhir-r4-core/Identifier";
export type { Period } from "../hl7-fhir-r4-core/Period";
export type { Reference } from "../hl7-fhir-r4-core/Reference";
export type { RelatedArtifact } from "../hl7-fhir-r4-core/RelatedArtifact";
export type { UsageContext } from "../hl7-fhir-r4-core/UsageContext";

export interface MeasureGroup extends BackboneElement {
    code?: CodeableConcept;
    description?: string;
    population?: MeasureGroupPopulation[];
    stratifier?: MeasureGroupStratifier[];
}
export interface MeasureGroupPopulation extends BackboneElement {
    code?: CodeableConcept;
    criteria: Expression;
    description?: string;
}
export interface MeasureGroupStratifier extends BackboneElement {
    code?: CodeableConcept;
    component?: MeasureGroupStratifierComponent[];
    criteria?: Expression;
    description?: string;
}
export interface MeasureGroupStratifierComponent extends BackboneElement {
    code?: CodeableConcept;
    criteria: Expression;
    description?: string;
}
export interface MeasureSupplementalData extends BackboneElement {
    code?: CodeableConcept;
    criteria: Expression;
    description?: string;
    usage?: CodeableConcept[];
}
export interface Measure extends DomainResource {
    resourceType: "Measure";

    approvalDate?: string;
    _approvalDate?: Element;
    author?: ContactDetail[];
    clinicalRecommendationStatement?: string;
    _clinicalRecommendationStatement?: Element;
    compositeScoring?: CodeableConcept;
    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date?: string;
    _date?: Element;
    definition?: string[];
    _definition?: Element;
    description?: string;
    _description?: Element;
    disclaimer?: string;
    _disclaimer?: Element;
    editor?: ContactDetail[];
    effectivePeriod?: Period;
    endorser?: ContactDetail[];
    experimental?: boolean;
    _experimental?: Element;
    group?: MeasureGroup[];
    guidance?: string;
    _guidance?: Element;
    identifier?: Identifier[];
    improvementNotation?: CodeableConcept;
    jurisdiction?: CodeableConcept[];
    lastReviewDate?: string;
    _lastReviewDate?: Element;
    library?: string[];
    _library?: Element;
    name?: string;
    _name?: Element;
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    rateAggregation?: string;
    _rateAggregation?: Element;
    rationale?: string;
    _rationale?: Element;
    relatedArtifact?: RelatedArtifact[];
    reviewer?: ContactDetail[];
    riskAdjustment?: string;
    _riskAdjustment?: Element;
    scoring?: CodeableConcept;
    status: "draft" | "active" | "retired" | "unknown";
    _status?: Element;
    subjectCodeableConcept?: CodeableConcept;
    subjectReference?: Reference<"Group">;
    subtitle?: string;
    _subtitle?: Element;
    supplementalData?: MeasureSupplementalData[];
    title?: string;
    _title?: Element;
    topic?: CodeableConcept[];
    type_?: CodeableConcept[];
    url?: string;
    _url?: Element;
    usage?: string;
    _usage?: Element;
    useContext?: UsageContext[];
    version?: string;
    _version?: Element;
}
