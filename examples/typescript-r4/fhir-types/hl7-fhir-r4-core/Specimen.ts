// WARNING: This file is autogenerated by @atomic-ehr/codegen.
// GitHub: https://github.com/orgs/atomic-ehr/repositories
// Any manual changes made to this file may be overwritten.

import type { Annotation } from '../hl7-fhir-r4-core/Annotation';
import type { BackboneElement } from '../hl7-fhir-r4-core/BackboneElement';
import type { CodeableConcept } from '../hl7-fhir-r4-core/CodeableConcept';
import type { DomainResource } from '../hl7-fhir-r4-core/DomainResource';
import type { Duration } from '../hl7-fhir-r4-core/Duration';
import type { Identifier } from '../hl7-fhir-r4-core/Identifier';
import type { Period } from '../hl7-fhir-r4-core/Period';
import type { Quantity } from '../hl7-fhir-r4-core/Quantity';
import type { Reference } from '../hl7-fhir-r4-core/Reference';

export type { Annotation }from '../hl7-fhir-r4-core/Annotation';;
export type { BackboneElement }from '../hl7-fhir-r4-core/BackboneElement';;
export type { CodeableConcept }from '../hl7-fhir-r4-core/CodeableConcept';;
export type { Duration }from '../hl7-fhir-r4-core/Duration';;
export type { Identifier }from '../hl7-fhir-r4-core/Identifier';;
export type { Period }from '../hl7-fhir-r4-core/Period';;
export type { Quantity }from '../hl7-fhir-r4-core/Quantity';;
export type { Reference }from '../hl7-fhir-r4-core/Reference';;


export interface SpecimenCollection extends BackboneElement {
  bodySite?: CodeableConcept;
  collectedDateTime?: string;
  collectedPeriod?: Period;
  collector?: Reference<'Practitioner' | 'PractitionerRole'>;
  duration?: Duration;
  fastingStatusCodeableConcept?: CodeableConcept;
  fastingStatusDuration?: Duration;
  method?: CodeableConcept;
  quantity?: Quantity;
}

export interface SpecimenContainer extends BackboneElement {
  additiveCodeableConcept?: CodeableConcept;
  additiveReference?: Reference<'Substance'>;
  capacity?: Quantity;
  description?: string;
  identifier?: Identifier[];
  specimenQuantity?: Quantity;
  type?: CodeableConcept;
}

export interface SpecimenProcessing extends BackboneElement {
  additive?: Reference<'Substance'>[];
  description?: string;
  procedure?: CodeableConcept;
  timeDateTime?: string;
  timePeriod?: Period;
}

export interface Specimen extends DomainResource {
  resourceType: 'Specimen';
  
  accessionIdentifier?: Identifier;
  collection?: SpecimenCollection;
  condition?: CodeableConcept[];
  container?: SpecimenContainer[];
  identifier?: Identifier[];
  note?: Annotation[];
  parent?: Reference<'Specimen'>[];
  processing?: SpecimenProcessing[];
  receivedTime?: string;
  _receivedTime?: Element;
  request?: Reference<'ServiceRequest'>[];
  status?: 'available' | 'unavailable' | 'unsatisfactory' | 'entered-in-error';
  _status?: Element;
  subject?: Reference<'Device' | 'Group' | 'Location' | 'Patient' | 'Substance'>;
  type?: CodeableConcept;
}

