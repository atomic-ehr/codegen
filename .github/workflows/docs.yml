name: üìö Documentation

on:
  push:
    branches: [main]
    paths: 
      - 'src/**'
      - 'docs/**'
      - 'README.md'
      - 'typedoc.json'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'docs/**'
      - 'README.md'
      - 'typedoc.json'

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate API Documentation
        run: bun run docs

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/api/
          retention-days: 30

      - name: Setup Pages (if main branch)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages (if main branch)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/api/

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-docs
    runs-on: ubuntu-latest
    
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check TypeScript compilation
        run: bun run typecheck

      - name: Generate documentation (validation)
        run: bun run docs

      - name: Check for broken links in documentation
        run: |
          # Check if documentation was generated successfully
          if [ ! -d "docs/api" ]; then
            echo "‚ùå Documentation was not generated"
            exit 1
          fi
          
          # Check if main files exist
          if [ ! -f "docs/api/index.html" ]; then
            echo "‚ùå Main documentation index not found"
            exit 1
          fi
          
          echo "‚úÖ Documentation validation passed"

      - name: Lint documentation content
        run: |
          # Check for common documentation issues
          echo "Checking for documentation quality..."
          
          # Check if README links are valid
          if ! grep -q "docs/api" README.md 2>/dev/null; then
            echo "‚ö†Ô∏è README might not link to generated API docs"
          fi
          
          # Check TypeDoc configuration
          if [ ! -f "typedoc.json" ]; then
            echo "‚ùå TypeDoc configuration not found"
            exit 1
          fi
          
          echo "‚úÖ Documentation linting passed"