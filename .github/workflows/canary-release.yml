name: Canary Release

on:
  push:
    branches: [ main ]

jobs:
  canary-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip release]') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Run tests
      run: bun run test:ci
    
    - name: Run type checking
      run: bun run typecheck
    
    - name: Run linting
      run: bun run lint
    
    - name: Build project
      run: bun run build
    
    - name: Generate canary version
      id: version
      run: |
        COMMIT_SHA=$(git rev-parse --short HEAD)
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        CANARY_VERSION="0.0.1-canary.${TIMESTAMP}.${COMMIT_SHA}"
        echo "canary_version=${CANARY_VERSION}" >> $GITHUB_OUTPUT
        echo "Generated canary version: ${CANARY_VERSION}"
    
    - name: Update package.json version
      run: |
        bun --bun -e "
        const pkg = require('./package.json');
        pkg.version = '${{ steps.version.outputs.canary_version }}';
        require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "
    
    - name: Setup NPM authentication
      run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
    
    - name: Publish canary release
      run: |
        npm publish --tag canary --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.canary_version }}
        release_name: Canary Release v${{ steps.version.outputs.canary_version }}
        body: |
          ðŸš€ Canary release from commit ${{ github.sha }}
          
          This is an automated canary release. Use with caution in production.
          
          **Installation:**
          ```bash
          npm install @atomic-ehr/codegen@canary
          # or
          bun add @atomic-ehr/codegen@canary
          ```
        draft: false
        prerelease: true